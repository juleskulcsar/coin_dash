{"version":3,"sources":["actions/types.js","reducers/historicalData.js","reducers/coinsList.js","reducers/coinData.js","reducers/exchanges.js","reducers/exchangeVolumes.js","reducers/exchangeById.js","reducers/globalData.js","reducers/index.js","store.js","images/logo.png","images/CoinGecko.png","components/SideBar.js","actions/historicalData.js","components/Spinner.js","components/Chart_Component.js","components/Chart_Component3.js","components/ScoreCard.js","actions/coinData.js","components/TopScoreCards.js","components/RightCard.js","components/RightTable.js","components/RightPanel.js","actions/coinsList.js","components/CoinListDropdown.js","components/TopChart.js","components/CoinItem.js","components/CoinList.js","actions/exchanges.js","components/Exchanges.js","actions/exchangeVolume.js","actions/exchangesById.js","components/Chart_Component2.js","components/TickerTable.js","components/ExchangeScoreCards.js","components/ExchangeIdTable.js","components/ExchangeVolume.js","components/PolarAreaChart.js","components/GlobalTable.js","components/GlobalList.js","components/GlobalData.js","actions/globalData.js","components/Routes.js","components/Navbar.js","App.js","reportWebVitals.js","index.js","utils/timeConverter.js"],"names":["GET_HISTORICAL_DATA","GET_COINS","GET_COIN_DATA","GET_EXCHANGES","GET_EXCHANGE_VOLUME","GET_EXCHANGE","GET_GLOBAL_DATA","initialState","historicalDataLoad","loading","params","coin","currency","days","interval","error","coinsListData","coinDataLoad","exchanges","exchangeVolumeLoad","id","exchange","globalDataLoad","combineReducers","historicalData","state","action","type","payload","coinsList","coinData","exchangeVolumes","globalData","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","StyledLink","styled","isActive","children","props","StyledDiv","div","StyledUl","ul","StyledList","li","Logo","img","square","CoinGeckoLogo","Paragraph","p","ExternalLink","a","CoinGeckoWrapper","SideBar","src","logo","to","style","paddingRight","marginTop","className","href","target","CoinGecko","getHistoricalData","dispatch","axios","get","res","prices","volumes","marketCaps","dates","data","i","length","push","total_volumes","market_caps","timeConverter","msg","status","rotateSpinner","keyframes","Spinner","Canvas","canvas","CanvasWrapper","myChart1","ctx","document","getElementById","gradientLine","getContext","createLinearGradient","height","addColorStop","undefined","window","destroy","Chart","labels","datasets","label","borderColor","borderWidth","options","responsive","scaleFontColor","maintainAspectRatio","layout","padding","top","left","right","bottom","scales","yAxes","ticks","beginAtZero","fontColor","display","xAxes","tooltips","mode","title","text","fontSize","legend","boxWidth","connect","param","useEffect","myChart","Card","transparent","margin","rgba","css","ListWrapper","tes","ParagraphWrapper","ScoreCard","icon","symbolIs","value","getCoinData","ScoreCardWrapper","Image","withRouter","icons","Object","keys","justifyContent","image","small","name","color","market_data","current_price","usd","price_change_percentage_24h","toFixed","ath_date","slice","ath","atl_date","atl","circulating_supply","List","RightCard","symbol","links","homepage","market_cap_rank","market_cap_change_percentage_24h","genesis_date","liquidity_score","high_24h","low_24h","Table","table","TD","td","RightTable","th","price_change_percentage_1h_in_currency","price_change_percentage_24h_in_currency","price_change_percentage_7d_in_currency","price_change_percentage_14d_in_currency","price_change_percentage_30d_in_currency","price_change_percentage_60d_in_currency","price_change_percentage_1y_in_currency","getCoins","Wrapper","Dropdown","StyledSelect","select","Input","input","attrs","num","Label","TestDiv","onChange","useState","val","setVal","clickHandler","idList","indexOf","e","map","item","index","readOnly","Panel","TopSectionWrapper","RightPanelWrapper","TopWrapper","setParam","Topbar","TopIcon","CoinItem","Math","round","total_supply","total_volume","getExchanges","TableWrapper","TH","TR","tr","TableHead","thead","UrlLink","tableEntries","elem","country","year_established","url","trade_volume_24h_btc","trust_score","trust_score_rank","getExchangeVolume","getExchangeById","mounted","tickers","base","volume","converted_volume","btc","bid_ask_spread_percentage","is_anomaly","toString","is_stale","last_fetch_at","console","log","trade_volume_24h_btc_normalized","hide","Button","button","handleClick","onClick","transition","Row","Underline","active","borderTop","Content","Tab","tabs","setActive","Tabs","PolarAreaChart","marketCapPercentage","market_cap_percentage","values","areaChart","hoverBackgroundColor","hoverBorderColor","backgroundColor","GlobalTable","coins","marketCap","GlobalList","fontWeight","active_cryptocurrencies","markets","market_cap_change_percentage_24h_usd","ongoing_icos","ended_icos","upcoming_icos","RightFlex","getGlobalData","property","total_market_cap","Container","Routes","exact","path","component","TopChart","CoinList","Exchanges","ExchangeVolume","GlobalData","Link","LogoLink","Menu","nav","open","MobileMenuIcon","HeaderWrapper","StyledNav","pathname","useLocation","menuOpen","setMenuOpen","authLinks","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports","UNIX_timestamp","Date","year","getFullYear","month","getMonth","getDate"],"mappings":"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","file":"static/js/main.cb95be70.chunk.js","sourcesContent":["export const GET_HISTORICAL_DATA = 'GET_HISTORICAL_DATA';\nexport const HISTORICAL_DATA_ERROR = 'HISTORICAL_DATA_ERROR';\nexport const GET_COINS = 'GET_COINS';\nexport const GET_COINS_ERROR = 'GET_COINS_ERROR';\nexport const GET_COIN_DATA = 'GET_COIN_DATA';\nexport const GET_COIN_DATA_ERROR = 'GET_COIN_DATA_ERROR';\nexport const GET_EXCHANGES = 'GET_EXCHANGES';\nexport const GET_EXCHANGES_ERROR = 'GET_EXCHANGES_ERROR';\nexport const GET_EXCHANGE_VOLUME = 'GET_EXCHANGE_VOLUME';\nexport const GET_EXCHANGE_VOLUME_ERROR = 'GET_EXCHANGE_VOLUME_ERROR';\nexport const GET_EXCHANGE = 'GET_EXCHANGE';\nexport const GET_EXCHANGE_ERROR = 'GET_EXCHANGE_ERROR';\nexport const GET_GLOBAL_DATA = 'GET_GLOBAL_DATA';\nexport const GET_GLOBAL_DATA_ERROR = 'GET_GLOBAL_DATA_ERROR';\n","import { GET_HISTORICAL_DATA } from '../actions/types';\n\nconst initialState = {\n    historicalDataLoad: [],\n    loading: true,\n    params: { coin: 'bitcoin', currency: 'usd', days: '30', interval: 'daily' },\n    error: {}\n};\n\nexport default function historicalData(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_HISTORICAL_DATA:\n            return {\n                ...state,\n                historicalDataLoad: payload,\n                loading: false\n            };\n\n        default:\n            return state;\n    }\n}\n","import { GET_COINS } from '../actions/types';\n\nconst initialState = {\n    coinsListData: [],\n    loading: true,\n    error: {}\n};\n\nexport default function coinList(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_COINS:\n            return {\n                ...state,\n                coinsListData: payload,\n                loading: false\n            };\n\n        default:\n            return state;\n    }\n}\n","import { GET_COIN_DATA } from '../actions/types';\n\nconst initialState = {\n    coinDataLoad: {},\n    coin: 'bitcoin',\n    loading: true,\n    error: {}\n};\n\nexport default function coinData(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_COIN_DATA:\n            return {\n                ...state,\n                coinDataLoad: payload,\n                loading: false\n            };\n\n        default:\n            return state;\n    }\n}\n","import { GET_EXCHANGES } from '../actions/types';\n\nconst initialState = {\n    exchanges: [],\n    loading: true,\n    error: {}\n};\n\nexport default function exchanges(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_EXCHANGES:\n            return {\n                ...state,\n                exchanges: payload,\n                loading: false\n            };\n\n        default:\n            return state;\n    }\n}\n","import { GET_EXCHANGE_VOLUME } from '../actions/types';\n\nconst initialState = {\n    exchangeVolumeLoad: [],\n    loading: true,\n    params: { id: 'aax' },\n    error: {}\n};\n\nexport default function exchangeVolumes(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_EXCHANGE_VOLUME:\n            return {\n                ...state,\n                exchangeVolumeLoad: payload,\n                loading: false\n            };\n\n        default:\n            return state;\n    }\n}\n","import { GET_EXCHANGE } from '../actions/types';\n\nconst initialState = {\n    exchange: [],\n    loading: true,\n    error: {}\n};\n\nexport default function exchangeById(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_EXCHANGE:\n            return {\n                ...state,\n                exchange: payload,\n                loading: false\n            };\n\n        default:\n            return state;\n    }\n}\n","import { GET_GLOBAL_DATA } from '../actions/types';\n\nconst initialState = {\n    globalDataLoad: [],\n    loading: true,\n    error: {}\n};\n\nexport default function globalData(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_GLOBAL_DATA:\n            return {\n                ...state,\n                globalDataLoad: payload,\n                loading: false\n            };\n\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport historicalData from './historicalData';\nimport coinsList from './coinsList';\nimport coinData from './coinData';\nimport exchanges from './exchanges';\nimport exchangeVolumes from './exchangeVolumes';\nimport exchange from './exchangeById';\nimport globalData from './globalData';\n\nexport default combineReducers({\n    historicalData,\n    coinsList,\n    coinData,\n    exchanges,\n    exchangeVolumes,\n    exchange,\n    globalData\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/logo.23ce4705.png\";","export default __webpack_public_path__ + \"static/media/CoinGecko.23a707f9.png\";","import React, { useState } from 'react';\nimport { Link as RouterDomLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../images/logo.png';\nimport CoinGecko from '../images/CoinGecko.png';\n\nconst Link = ({ isActive, children, ...props }) => {\n    return <RouterDomLink {...props}>{children}</RouterDomLink>;\n};\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n    line-height: 1.6;\n    font-weight: ${props => (props.isActive ? 'bold' : 'normal')};\n`;\n\nconst StyledDiv = styled.div`\n    border-left: 1px solid #682e19;\n    padding-left: 1em;\n    padding-top: 1.5em;\n    width: 14vw;\n    min-width: 14vw;\n    background: gray;\n    border-top-left-radius: 20px;\n    border-bottom-left-radius: 20px;\n    filter: drop-shadow(1px 4px 12px #101820);\n    background: linear-gradient(\n        111.29deg,\n        rgba(140, 154, 163, 0.53) -1.83%,\n        rgba(68, 83, 93, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n    @media (max-width: 768px) {\n        display: none;\n    }\n    @media (min-width: 3840px) {\n        width: 10vw;\n    }\n`;\n\nconst StyledUl = styled.ul`\n    list-style: none;\n    padding: 0;\n`;\n\nconst StyledList = styled.li`\n    text-align: left;\n    font-size: 16px;\n    line-height: 1.6;\n    padding: 2px;\n    > a {\n        position: relative;\n        color: white;\n        text-decoration: none;\n    }\n    > a:hover {\n        color: #e47656;\n    }\n    > a:before {\n        content: '';\n        position: absolute;\n        width: 100%;\n        height: 2px;\n        bottom: 0;\n        left: 0;\n        background-color: #8e8c89;\n        visibility: hidden;\n        -webkit-transform: scaleX(0);\n        transform: scaleX(0);\n        -webkit-transition: all 0.3s ease-in-out 0s;\n        transition: all 0.3s ease-in-out 0s;\n    }\n    > a:hover:before {\n        visibility: visible;\n        -webkit-transform: scaleX(1);\n        transform: scaleX(1);\n    }\n    @media (min-width: 2560px) {\n        font-size: 30px;\n    }\n`;\n\nconst Logo = styled.img`\n    height: 4em;\n    width: 4em;\n    margin-left: 3em;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-radius: ${props => (props.square ? null : '50%')};\n    padding: 0.5em;\n    background: #44535d;\n`;\n\nconst CoinGeckoLogo = styled.img`\n    height: 1.5em;\n    width: 1.5em;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-radius: 50%;\n    vertical-align: middle;\n`;\n\nconst Paragraph = styled.p`\n    color: white;\n    line-height: 1.6;\n    font-size: 15px;\n    position: absolute;\n    bottom: 0;\n    @media (min-width: 2560px) {\n        font-size: 20px;\n    }\n`;\nconst ExternalLink = styled.a`\n    text-decoration: none;\n    line-height: 1.6;\n    color: white;\n`;\nconst CoinGeckoWrapper = styled.div`\n    text-align: center;\n`;\n\nconst SideBar = () => {\n    return (\n        <>\n            <StyledDiv>\n                <Logo src={logo} />\n                <StyledUl>\n                    <StyledList>\n                        <StyledLink to={`/coin_dash`}>\n                            <span\n                                style={{\n                                    paddingRight: '1em',\n                                    marginTop: '1em'\n                                }}\n                                className='material-icons'\n                            >\n                                dashboard\n                            </span>\n                            Dashboard\n                        </StyledLink>\n                    </StyledList>\n                    <StyledList>\n                        <StyledLink to={`/coinlist`}>\n                            <span\n                                style={{\n                                    paddingRight: '1em',\n                                    marginTop: '1em'\n                                }}\n                                className='material-icons'\n                            >\n                                view_list\n                            </span>\n                            Crypto Coins\n                        </StyledLink>\n                    </StyledList>\n                    <StyledList>\n                        <StyledLink to={`/exchanges`}>\n                            <span\n                                style={{\n                                    paddingRight: '1em',\n                                    marginTop: '1em'\n                                }}\n                                className='material-icons'\n                            >\n                                inventory_2\n                            </span>\n                            Exchanges\n                        </StyledLink>\n                    </StyledList>\n                    <StyledList>\n                        <StyledLink to={`/volumes`}>\n                            <span\n                                style={{\n                                    paddingRight: '1em',\n                                    marginTop: '1em'\n                                }}\n                                className='material-icons'\n                            >\n                                equalizer\n                            </span>\n                            Volumes\n                        </StyledLink>\n                    </StyledList>\n                    <StyledList>\n                        <StyledLink to={`/global-data`}>\n                            <span\n                                style={{\n                                    paddingRight: '1em',\n                                    marginTop: '1em'\n                                }}\n                                className='material-icons'\n                            >\n                                public\n                            </span>\n                            Global Data\n                        </StyledLink>\n                    </StyledList>\n                </StyledUl>\n                <CoinGeckoWrapper>\n                    <ExternalLink\n                        href='https://www.coingecko.com/'\n                        target='_blank'\n                    >\n                        <Paragraph>\n                            Data from CoinGecko{' '}\n                            <CoinGeckoLogo src={CoinGecko} square={true} />\n                        </Paragraph>\n                    </ExternalLink>\n                </CoinGeckoWrapper>\n            </StyledDiv>\n        </>\n    );\n};\n\nexport default SideBar;\n","import axios from 'axios';\nimport timeConverter from '../utils/timeConverter';\nimport { GET_HISTORICAL_DATA, HISTORICAL_DATA_ERROR } from './types';\n\nexport const getHistoricalData = params => async dispatch => {\n    try {\n        const res = await axios.get(\n            `https://api.coingecko.com/api/v3/coins/${params.coin}/market_chart?vs_currency=${params.currency}&days=${params.days}&interval=${params.interval}`\n        );\n\n        let prices = [];\n        let volumes = [];\n        let marketCaps = [];\n        let dates = [];\n        let data = [];\n        for (let i = 0; i < res.data.prices.length; i++) {\n            prices.push(res.data.prices[i][1]);\n            volumes.push(res.data.total_volumes[i][1]);\n            marketCaps.push(res.data.market_caps[i][1]);\n            dates.push(timeConverter(res.data.prices[i][0]));\n        }\n        data.push(prices, volumes, dates, marketCaps);\n        dispatch({\n            type: GET_HISTORICAL_DATA,\n            payload: data\n        });\n    } catch (err) {\n        dispatch({\n            type: HISTORICAL_DATA_ERROR,\n            payload: {\n                msg: err,\n                status: err\n            }\n        });\n    }\n};\n","import styled, { css, keyframes } from 'styled-components';\n\nconst rotateSpinner = keyframes`\n    from {\n        transform: rotate(0deg);\n    }\n\n    to {\n        transform: rotate(360deg)\n    }\n`;\n\nconst Spinner = styled.div`\n    height: 90px;\n    width: 90px;\n    border: 6px solid #f16350;\n    border-radius: 50%;\n    border-top: none;\n    border-right: none;\n    position: relative;\n    top: 15rem;\n    left: 5rem;\n    width: 100px;\n    height: 100px;\n    margin-right: 2rem;\n    margin-left: 2rem;\n    animation: ${rotateSpinner} 1s linear infinite;\n`;\n\nexport { Spinner };\n","import React, { useEffect } from 'react';\nimport Chart from 'chart.js';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getHistoricalData } from '../actions/historicalData';\nimport { Spinner } from './Spinner';\n\nconst Canvas = styled.canvas`\n    filter: drop-shadow(1px 4px 12px #101820);\n    border-radius: 20px;\n    margin-bottom: 20px;\n    background: linear-gradient(\n        111.29deg,\n        rgba(255, 255, 255, 0.43) -1.83%,\n        rgba(255, 255, 255, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n`;\n\nconst CanvasWrapper = styled.div`\n    /* width: 800px; */\n    width: 60vw;\n    max-width: 1200px;\n    height: 50%;\n    /* max-height: 20vw; */\n    position: relative;\n    @media (max-width: 768px) {\n        width: 300px;\n    }\n    @media (min-width: 2560px) {\n        max-height: 20vw;\n    }\n`;\n\nconst myChart1 = (data, coin) => {\n    const ctx = document.getElementById('my_Chart');\n    let c = ctx.getContext('2d');\n    let gradientLine = c.createLinearGradient(0, 0, 0, ctx.height);\n    gradientLine.addColorStop(0, 'rgba(250,174,50,1)');\n    gradientLine.addColorStop(1, 'rgba(250,174,50,0)');\n    if (window.myChart1 != undefined) window.myChart1.destroy();\n    window.myChart1 = new Chart(ctx, {\n        type: 'line',\n        // scaleFontColor: 'white',\n        data: {\n            labels: data[2],\n            datasets: [\n                {\n                    label: 'price',\n                    // backgroundColor: gradientLine,\n                    borderColor: '#153144',\n                    data: data[0],\n                    borderWidth: 1\n                }\n            ]\n        },\n        options: {\n            responsive: true,\n            scaleFontColor: 'white',\n            maintainAspectRatio: false,\n            layout: {\n                padding: {\n                    top: 5,\n                    left: 15,\n                    right: 15,\n                    bottom: 15\n                }\n            },\n            scales: {\n                yAxes: [\n                    {\n                        ticks: {\n                            beginAtZero: false,\n                            fontColor: 'white',\n                            display: false\n                        }\n                    }\n                ],\n                xAxes: [\n                    {\n                        ticks: {\n                            beginAtZero: false,\n                            fontColor: 'white',\n                            display: false\n                        }\n                    }\n                ]\n            },\n            tooltips: {\n                mode: 'nearest'\n            },\n            title: {\n                display: true,\n                text: `${coin.coin} price`,\n                fontSize: 20,\n                fontColor: 'white'\n            },\n            legend: {\n                labels: {\n                    boxWidth: 0\n                }\n            }\n            // events: ['click']\n        }\n    });\n};\n\nconst Chart_Component = ({\n    getHistoricalData,\n    historicalData: { historicalDataLoad },\n    param\n}) => {\n    useEffect(() => {\n        getHistoricalData(param);\n    }, [getHistoricalData, param]);\n    useEffect(() => {\n        myChart1(historicalDataLoad, param);\n    }, [myChart1, historicalDataLoad]);\n\n    return (\n        <CanvasWrapper>\n            <Canvas id='my_Chart' />\n        </CanvasWrapper>\n    );\n};\n\nChart_Component.propTypes = {\n    getHistoricalData: PropTypes.func.isRequired,\n    historicalDataLoad: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    historicalData: state.historicalData\n});\nexport default connect(mapStateToProps, { getHistoricalData })(Chart_Component);\n","import React, { useEffect } from 'react';\nimport Chart from 'chart.js';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getHistoricalData } from '../actions/historicalData';\nimport { Spinner } from './Spinner';\n\nconst Canvas = styled.canvas`\n    /* border: 1px solid rgb(235, 233, 233); */\n    background: linear-gradient(\n        111.29deg,\n        rgba(255, 255, 255, 0.43) -1.83%,\n        rgba(255, 255, 255, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n    filter: drop-shadow(1px 4px 12px #101820);\n    border-radius: 20px;\n    margin-top: 20px;\n`;\n\nconst CanvasWrapper = styled.div`\n    /* width: 800px; */\n    width: 60vw;\n    max-width: 1200px;\n    height: 50%;\n    /* max-height: 20vw; */\n    position: relative;\n    @media (max-width: 768px) {\n        width: 300px;\n    }\n`;\n\nconst myChart = (data, coin) => {\n    const ctx = document.getElementById('my_Chart3');\n    let c = ctx.getContext('2d');\n    let gradientLine = c.createLinearGradient(0, 0, 0, ctx.height);\n    gradientLine.addColorStop(0, '#D13C18');\n    gradientLine.addColorStop(1, '#F6B4A4');\n    if (window.myChart) window.myChart.destroy();\n    window.myChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: data[2],\n            datasets: [\n                {\n                    label: 'total volumes',\n                    borderColor: '#6a1d06',\n                    data: data[1],\n                    borderWidth: 1\n                }\n            ]\n        },\n        options: {\n            responsive: true,\n            scaleFontColor: 'white',\n            maintainAspectRatio: false,\n            layout: {\n                padding: {\n                    top: 5,\n                    left: 15,\n                    right: 15,\n                    bottom: 15\n                }\n            },\n            scales: {\n                yAxes: [\n                    {\n                        ticks: {\n                            beginAtZero: false,\n                            fontColor: 'white',\n                            display: false\n                        }\n                    }\n                ],\n                xAxes: [\n                    {\n                        ticks: {\n                            beginAtZero: false,\n                            fontColor: 'white',\n                            display: false\n                        }\n                    }\n                ]\n            },\n            tooltips: {\n                mode: 'nearest'\n            },\n            title: {\n                display: true,\n                text: `${coin.coin} volume`,\n                fontSize: 20,\n                fontColor: 'white'\n            },\n            legend: {\n                labels: {\n                    boxWidth: 0\n                }\n            }\n            // events: ['click']\n        }\n    });\n};\n\nconst Chart_Component3 = ({\n    getHistoricalData,\n    historicalData: { historicalDataLoad },\n    param\n}) => {\n    useEffect(() => {\n        getHistoricalData(param);\n    }, [getHistoricalData, param]);\n    useEffect(() => {\n        myChart(historicalDataLoad, param);\n    }, [myChart, historicalDataLoad]);\n\n    return (\n        <CanvasWrapper>\n            <Canvas id='my_Chart3' />\n        </CanvasWrapper>\n    );\n};\n\nChart_Component3.propTypes = {\n    getHistoricalData: PropTypes.func.isRequired,\n    historicalDataLoad: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    historicalData: state.historicalData\n});\nexport default connect(mapStateToProps, { getHistoricalData })(\n    Chart_Component3\n);\n","import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport styled, { css, keyframes } from 'styled-components';\nimport { rgba, modularScale } from 'polished';\n\nconst Card = styled.div`\n    position: relative;\n    width: ${props => (props.transparent ? '20em' : '100%')};\n    height: ${props => (props.transparent ? '5em' : '6em')};\n    margin-right: ${props => (props.margin ? '1em' : '0')};\n    overflow: hidden;\n    border-radius: 1rem;\n    /* padding-top: 1rem;\n    padding-bottom: 1rem; */\n    box-shadow: 0 4px 15px ${rgba('black', 0.1)};\n    filter: drop-shadow(1px 4px 12px #101820);\n    opacity: 0.9;\n    ${props =>\n        props.transparent\n            ? css`\n                  background: linear-gradient(\n                      111.29deg,\n                      rgba(255, 255, 255, 0.1) -1.83%,\n                      rgba(255, 255, 255, 0) 189.95%\n                  );\n              `\n            : css`\n                  background: linear-gradient(\n                      111.29deg,\n                      rgba(255, 255, 255, 0.43) -1.83%,\n                      rgba(255, 255, 255, 0) 189.95%\n                  );\n              `}\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n    @media (max-width: 768px) {\n        width: 100%;\n        height: 6em;\n        margin: 10px;\n    }\n`;\n\nconst ListWrapper = styled.div`\n    position: relative;\n    align-self: center;\n    left: 1rem;\n    overflow: hidden;\n`;\n\nconst Paragraph = styled.p`\n    color: white;\n    font-size: ${props =>\n        props.tes ? '20px' : props.transparent ? '25px' : '15px'};\n    font-weight: ${props => (props.tes ? 'bold' : null)};\n    padding-left: 1em;\n    margin: 10px 0 10px 0;\n    @media (max-width: 768px) {\n        margin: 0;\n        padding: 10px 0 10px 0;\n    }\n`;\n\nconst ParagraphWrapper = styled.div`\n    display: flex;\n`;\n\nconst ScoreCard = props => {\n    return (\n        <Card transparent={props.transparent} margin={props.margin}>\n            {/* <Scrollbars> */}\n            <ListWrapper>\n                <ParagraphWrapper>\n                    <Paragraph>{props.icon}</Paragraph>\n                    <Paragraph>{props.text}</Paragraph>\n                </ParagraphWrapper>\n                <ParagraphWrapper>\n                    <Paragraph tes={true}>{props.symbolIs}</Paragraph>\n                    <Paragraph transparent={props.transparent} tes={true}>\n                        {props.value}\n                    </Paragraph>\n                </ParagraphWrapper>\n            </ListWrapper>\n            {/* </Scrollbars> */}\n        </Card>\n    );\n};\n\nexport default ScoreCard;\n","import axios from 'axios';\nimport { GET_COIN_DATA, GET_COIN_DATA_ERROR } from './types';\n\nexport const getCoinData = coin => async dispatch => {\n    try {\n        const res = await axios.get(\n            `https://api.coingecko.com/api/v3/coins/${coin}`\n        );\n        dispatch({\n            type: GET_COIN_DATA,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_COIN_DATA_ERROR,\n            payload: {\n                msg: err,\n                status: err\n            }\n        });\n    }\n};\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport ScoreCard from './ScoreCard';\nimport { getCoinData } from '../actions/coinData';\nimport { Spinner } from './Spinner';\n\nconst ScoreCardWrapper = styled.div`\n    display: flex;\n    /* max-width: 800px; */\n    width: 60vw;\n    max-width: 1200px;\n    border-radius: 20px;\n    justify-content: space-between;\n    @media (max-width: 768px) {\n        flex-direction: column;\n        align-items: center;\n        position: relative;\n        /* top: 24em; */\n        width: 100%;\n    }\n`;\n\nconst Image = styled.img`\n    height: 2em;\n    margin: 10px 10px 0 10px;\n    filter: drop-shadow(1px 4px 12px #1d1562);\n    @media (max-width: 768px) {\n        padding: 0;\n        margin: 0;\n    }\n`;\n\nconst Paragraph = styled.p`\n    color: white;\n    line-height: 1.6;\n    font-size: 25px;\n    padding-right: 1em;\n    @media (max-width: 768px) {\n        font-size: 20px;\n        padding: 0;\n        margin: 0;\n    }\n`;\n\nconst TopScoreCards = ({ getCoinData, coinData: { coinDataLoad }, param }) => {\n    useEffect(() => {\n        getCoinData(param.coin);\n    }, [getCoinData, param.coin]);\n\n    const icons = [\n        <span className='material-icons'>slow_motion_video</span>,\n        <span className='material-icons'>loop</span>,\n        <span className='material-icons'>speed</span>\n    ];\n\n    return (\n        <>\n            {Object.keys(coinDataLoad).length == 0 ? (\n                <Spinner />\n            ) : (\n                <>\n                    <ScoreCardWrapper>\n                        <div\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'space-around'\n                            }}\n                        >\n                            <Image src={coinDataLoad.image.small} />\n                            <Paragraph>{coinDataLoad.name}</Paragraph>\n                        </div>\n                        <Paragraph>\n                            Price{' '}\n                            <span\n                                style={{ color: '#bacdca', fontSize: '25px' }}\n                            >\n                                ${coinDataLoad.market_data.current_price.usd}\n                            </span>\n                        </Paragraph>\n                        {coinDataLoad.market_data.price_change_percentage_24h <\n                        0 ? (\n                            <Paragraph>\n                                24h:{' '}\n                                <span\n                                    style={{\n                                        color: '#E8431B',\n                                        fontSize: '25px'\n                                    }}\n                                >\n                                    {coinDataLoad.market_data.price_change_percentage_24h.toFixed(\n                                        2\n                                    )}\n                                    %\n                                </span>\n                                <span\n                                    className='material-icons'\n                                    style={{\n                                        color: '#E8431B'\n                                        // fontSize: '30px'\n                                    }}\n                                >\n                                    trending_down\n                                </span>\n                            </Paragraph>\n                        ) : (\n                            <Paragraph>\n                                24h:{' '}\n                                <span\n                                    style={{\n                                        color: '#56a192',\n                                        fontSize: '25px'\n                                    }}\n                                >\n                                    {coinDataLoad.market_data.price_change_percentage_24h.toFixed(\n                                        2\n                                    )}\n                                    %\n                                </span>\n                                <span\n                                    className='material-icons'\n                                    style={{\n                                        color: '#56a192'\n                                        // fontSize: '30px'\n                                    }}\n                                >\n                                    trending_up\n                                </span>\n                            </Paragraph>\n                        )}\n                    </ScoreCardWrapper>\n\n                    <ScoreCardWrapper>\n                        <ScoreCard\n                            text={`All time high: ${coinDataLoad.market_data.ath_date.usd.slice(\n                                0,\n                                10\n                            )}  `}\n                            value={coinDataLoad.market_data.ath.usd}\n                            icon={icons[0]}\n                            symbolIs={'$'}\n                            transparent={false}\n                            margin={true}\n                        />\n                        <ScoreCard\n                            text={`All time low: ${coinDataLoad.market_data.atl_date.usd.slice(\n                                0,\n                                10\n                            )}   `}\n                            value={coinDataLoad.market_data.atl.usd}\n                            icon={icons[2]}\n                            symbolIs={'$'}\n                            transparent={false}\n                            margin={true}\n                        />\n                        <ScoreCard\n                            text={'Circulating supply:   '}\n                            value={coinDataLoad.market_data.circulating_supply}\n                            icon={icons[1]}\n                            symbolIs={''}\n                            transparent={false}\n                        />\n                    </ScoreCardWrapper>\n                </>\n            )}\n        </>\n    );\n};\n\nTopScoreCards.propTypes = {\n    getCoinData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    coinData: state.coinData\n});\nexport default connect(mapStateToProps, { getCoinData })(\n    withRouter(TopScoreCards)\n);\n","import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport styled, { css, keyframes } from 'styled-components';\nimport { rgba, modularScale } from 'polished';\n\nconst Card = styled.div`\n    position: relative;\n    width: 17em;\n    height: 50%;\n    max-height: 38vh;\n    margin-top: 3em;\n    overflow: hidden;\n    border-radius: 1rem;\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n    box-shadow: 0 4px 15px ${rgba('black', 0.1)};\n    filter: drop-shadow(1px 4px 12px #101820);\n    opacity: 0.9;\n    border: 1px solid rgb(235, 233, 233, 0.3);\n    background: linear-gradient(\n        111.29deg,\n        rgba(34, 41, 46, 0.53) -1.83%,\n        rgba(27, 32, 37, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n    @media (max-width: 768px) {\n    }\n`;\n\nconst ListWrapper = styled.div`\n    position: relative;\n    align-self: center;\n    left: 1rem;\n    margin: auto;\n    overflow: hidden;\n`;\n\nconst Paragraph = styled.p`\n    color: white;\n    line-height: 1.6;\n    font-size: ${props => (props.tes ? '20px' : '15px')};\n    font-weight: ${props => (props.tes ? 'bold' : null)};\n    padding-left: 1em;\n`;\n\nconst List = styled.ul`\n    list-style-type: none;\n    padding: 0;\n`;\n\nconst RightCard = ({ coinDataLoad }) => {\n    return (\n        <Card>\n            <Scrollbars>\n                <ListWrapper>\n                    <List>\n                        <li>\n                            <Paragraph>Symbol: {coinDataLoad.symbol}</Paragraph>\n                        </li>\n                        <li>\n                            <Paragraph>\n                                Website: {coinDataLoad.links.homepage[0]}\n                            </Paragraph>\n                        </li>\n                        <li>\n                            <Paragraph>\n                                Market Cap: Rank #{coinDataLoad.market_cap_rank}\n                            </Paragraph>\n                        </li>\n                        <li>\n                            {coinDataLoad.market_data\n                                .market_cap_change_percentage_24h < 0 ? (\n                                <Paragraph>\n                                    Market Cap 24h:{' '}\n                                    <span\n                                        style={{\n                                            color: '#E8431B'\n                                        }}\n                                    >\n                                        {coinDataLoad.market_data.market_cap_change_percentage_24h.toFixed(\n                                            2\n                                        )}\n                                        %\n                                    </span>\n                                    <span\n                                        className='material-icons'\n                                        style={{\n                                            color: '#E8431B'\n                                        }}\n                                    >\n                                        trending_down\n                                    </span>\n                                </Paragraph>\n                            ) : (\n                                <Paragraph>\n                                    Market Cap 24h:{' '}\n                                    <span\n                                        style={{\n                                            color: '#56a192'\n                                        }}\n                                    >\n                                        {coinDataLoad.market_data.market_cap_change_percentage_24h.toFixed(\n                                            2\n                                        )}\n                                        %\n                                    </span>\n                                    <span\n                                        className='material-icons'\n                                        style={{\n                                            color: '#56a192'\n                                        }}\n                                    >\n                                        trending_up\n                                    </span>\n                                </Paragraph>\n                            )}\n                        </li>\n                        <li>\n                            <Paragraph>\n                                Genesis Date: {coinDataLoad.genesis_date}\n                            </Paragraph>\n                        </li>\n                        <li>\n                            <Paragraph>\n                                Liquidity Score: {coinDataLoad.liquidity_score}\n                            </Paragraph>\n                        </li>\n                        <li>\n                            <Paragraph>\n                                High 24h:{' '}\n                                {coinDataLoad.market_data.high_24h.usd}\n                            </Paragraph>\n                        </li>\n                        <li>\n                            <Paragraph>\n                                Low 24h: {coinDataLoad.market_data.low_24h.usd}\n                            </Paragraph>\n                        </li>\n                    </List>\n                </ListWrapper>\n            </Scrollbars>\n        </Card>\n    );\n};\n\nexport default RightCard;\n","import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport styled, { css, keyframes } from 'styled-components';\nimport { rgba, modularScale } from 'polished';\n\nconst Card = styled.div`\n    position: relative;\n    width: 16em;\n    height: 40%;\n    max-height: 38vh;\n    margin-top: 1em;\n    /* margin-bottom: 1em; */\n    padding-left: 1em;\n    overflow: hidden;\n    border-radius: 1rem;\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n    box-shadow: 0 4px 15px ${rgba('black', 0.1)};\n    filter: drop-shadow(1px 4px 12px #101820);\n    opacity: 0.9;\n\n    border: 1px solid rgb(235, 233, 233, 0.3);\n    background: linear-gradient(\n        111.29deg,\n        rgba(34, 41, 46, 0.53) -1.83%,\n        rgba(27, 32, 37, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n`;\nconst Table = styled.table`\n    color: white;\n`;\nconst TD = styled.td`\n    padding: 0.4rem;\n`;\nconst TH = styled.th`\n    padding: 0.5rem;\n`;\n\nconst RightTable = ({ coinDataLoad }) => {\n    return (\n        <Card>\n            <Scrollbars>\n                <Table>\n                    <tbody>\n                        <tr>\n                            <TD>Timeframe</TD>\n                            <TD>% Change</TD>\n                        </tr>\n                        <tr>\n                            <TD>1h</TD>\n                            {coinDataLoad.market_data\n                                .price_change_percentage_1h_in_currency.usd <\n                            0 ? (\n                                <TD>\n                                    <span\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        {coinDataLoad.market_data.price_change_percentage_1h_in_currency.usd.toFixed(\n                                            2\n                                        )}\n                                        %\n                                    </span>\n                                    <span\n                                        className='material-icons'\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        trending_down\n                                    </span>\n                                </TD>\n                            ) : (\n                                <TD>\n                                    {coinDataLoad.market_data\n                                        .price_change_percentage_1h_in_currency\n                                        .usd ? (\n                                        <>\n                                            <span\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                {coinDataLoad.market_data.price_change_percentage_1h_in_currency.usd.toFixed(\n                                                    2\n                                                )}\n                                                %\n                                            </span>\n                                            <span\n                                                className='material-icons'\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                trending_up\n                                            </span>\n                                        </>\n                                    ) : (\n                                        '--'\n                                    )}\n                                </TD>\n                            )}\n                        </tr>\n                        <tr>\n                            <TD>24h</TD>\n                            {coinDataLoad.market_data\n                                .price_change_percentage_24h_in_currency.usd <\n                            0 ? (\n                                <TD>\n                                    <span\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        {coinDataLoad.market_data.price_change_percentage_24h_in_currency.usd.toFixed(\n                                            2\n                                        )}\n                                        %\n                                    </span>\n                                    <span\n                                        className='material-icons'\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        trending_down\n                                    </span>\n                                </TD>\n                            ) : (\n                                <TD>\n                                    {coinDataLoad.market_data\n                                        .price_change_percentage_24h_in_currency\n                                        .usd ? (\n                                        <>\n                                            <span\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                {coinDataLoad.market_data.price_change_percentage_24h_in_currency.usd.toFixed(\n                                                    2\n                                                )}\n                                                %\n                                            </span>\n                                            <span\n                                                className='material-icons'\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                trending_up\n                                            </span>\n                                        </>\n                                    ) : (\n                                        '--'\n                                    )}\n                                </TD>\n                            )}\n                        </tr>\n                        <tr>\n                            <TD>7d</TD>\n                            {coinDataLoad.market_data\n                                .price_change_percentage_7d_in_currency.usd <\n                            0 ? (\n                                <TD>\n                                    <span\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        {coinDataLoad.market_data.price_change_percentage_7d_in_currency.usd.toFixed(\n                                            2\n                                        )}\n                                        %\n                                    </span>\n                                    <span\n                                        className='material-icons'\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        trending_down\n                                    </span>\n                                </TD>\n                            ) : (\n                                <TD>\n                                    {coinDataLoad.market_data\n                                        .price_change_percentage_7d_in_currency\n                                        .usd ? (\n                                        <>\n                                            <span\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                {coinDataLoad.market_data.price_change_percentage_7d_in_currency.usd.toFixed(\n                                                    2\n                                                )}\n                                                %\n                                            </span>\n                                            <span\n                                                className='material-icons'\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                trending_up\n                                            </span>\n                                        </>\n                                    ) : (\n                                        '--'\n                                    )}\n                                </TD>\n                            )}\n                        </tr>\n                        <tr>\n                            <TD>14d</TD>\n                            {coinDataLoad.market_data\n                                .price_change_percentage_14d_in_currency.usd <\n                            0 ? (\n                                <TD>\n                                    <span\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        {coinDataLoad.market_data.price_change_percentage_14d_in_currency.usd.toFixed(\n                                            2\n                                        )}\n                                        %\n                                    </span>\n                                    <span\n                                        className='material-icons'\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        trending_down\n                                    </span>\n                                </TD>\n                            ) : (\n                                <TD>\n                                    {coinDataLoad.market_data\n                                        .price_change_percentage_14d_in_currency\n                                        .usd ? (\n                                        <>\n                                            <span\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                {coinDataLoad.market_data.price_change_percentage_14d_in_currency.usd.toFixed(\n                                                    2\n                                                )}\n                                                %\n                                            </span>\n                                            <span\n                                                className='material-icons'\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                trending_up\n                                            </span>\n                                        </>\n                                    ) : (\n                                        '--'\n                                    )}\n                                </TD>\n                            )}\n                        </tr>\n                        <tr>\n                            <TD>30d</TD>\n                            {coinDataLoad.market_data\n                                .price_change_percentage_30d_in_currency.usd <\n                            0 ? (\n                                <TD>\n                                    <span\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        {coinDataLoad.market_data.price_change_percentage_30d_in_currency.usd.toFixed(\n                                            2\n                                        )}\n                                        %\n                                    </span>\n                                    <span\n                                        className='material-icons'\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        trending_down\n                                    </span>\n                                </TD>\n                            ) : (\n                                <TD>\n                                    {coinDataLoad.market_data\n                                        .price_change_percentage_30d_in_currency\n                                        .usd ? (\n                                        <>\n                                            <span\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                {coinDataLoad.market_data.price_change_percentage_30d_in_currency.usd.toFixed(\n                                                    2\n                                                )}\n                                                %\n                                            </span>\n                                            <span\n                                                className='material-icons'\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                trending_up\n                                            </span>\n                                        </>\n                                    ) : (\n                                        '--'\n                                    )}\n                                </TD>\n                            )}\n                        </tr>\n                        <tr>\n                            <TD>60d</TD>\n                            {coinDataLoad.market_data\n                                .price_change_percentage_60d_in_currency.usd <\n                            0 ? (\n                                <TD>\n                                    <span\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        {coinDataLoad.market_data.price_change_percentage_60d_in_currency.usd.toFixed(\n                                            2\n                                        )}\n                                        %\n                                    </span>\n                                    <span\n                                        className='material-icons'\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        trending_down\n                                    </span>\n                                </TD>\n                            ) : (\n                                <TD>\n                                    {coinDataLoad.market_data\n                                        .price_change_percentage_60d_in_currency\n                                        .usd ? (\n                                        <>\n                                            <span\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                {coinDataLoad.market_data.price_change_percentage_60d_in_currency.usd.toFixed(\n                                                    2\n                                                )}\n                                                %\n                                            </span>\n                                            <span\n                                                className='material-icons'\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                trending_up\n                                            </span>\n                                        </>\n                                    ) : (\n                                        '--'\n                                    )}\n                                </TD>\n                            )}\n                        </tr>\n                        <tr>\n                            <TD>1y</TD>\n                            {coinDataLoad.market_data\n                                .price_change_percentage_1y_in_currency.usd <\n                            0 ? (\n                                <TD>\n                                    <span\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        {coinDataLoad.market_data.price_change_percentage_1y_in_currency.usd.toFixed(\n                                            2\n                                        )}\n                                        %\n                                    </span>\n                                    <span\n                                        className='material-icons'\n                                        style={{\n                                            color: '#E8431B',\n                                            fontSize: '20px'\n                                        }}\n                                    >\n                                        trending_down\n                                    </span>\n                                </TD>\n                            ) : (\n                                <TD>\n                                    {coinDataLoad.market_data\n                                        .price_change_percentage_1y_in_currency\n                                        .usd ? (\n                                        <>\n                                            <span\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                {coinDataLoad.market_data.price_change_percentage_1y_in_currency.usd.toFixed(\n                                                    2\n                                                )}\n                                                %\n                                            </span>\n                                            <span\n                                                className='material-icons'\n                                                style={{\n                                                    color: '#56a192',\n                                                    fontSize: '20px'\n                                                }}\n                                            >\n                                                trending_up\n                                            </span>\n                                        </>\n                                    ) : (\n                                        '--'\n                                    )}\n                                </TD>\n                            )}\n                        </tr>\n                    </tbody>\n                </Table>\n            </Scrollbars>\n        </Card>\n    );\n};\n\nexport default RightTable;\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport RightCard from './RightCard';\nimport RightTable from './RightTable';\nimport { getCoinData } from '../actions/coinData';\nimport { Spinner } from './Spinner';\n\nconst ScoreCardWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    bottom: 2em;\n    border-radius: 20px;\n    padding: 0 2em;\n    height: 98vh;\n    @media (max-width: 768px) {\n        top: 40em;\n    }\n`;\n\nconst RightPanel = ({ getCoinData, coinData: { coinDataLoad }, coin }) => {\n    useEffect(() => {\n        getCoinData(coin);\n    }, [getCoinData]);\n\n    return (\n        <>\n            {Object.keys(coinDataLoad).length == 0 ? (\n                <Spinner />\n            ) : (\n                <ScoreCardWrapper>\n                    <RightCard coinDataLoad={coinDataLoad} />\n\n                    <RightTable coinDataLoad={coinDataLoad} />\n                </ScoreCardWrapper>\n            )}\n        </>\n    );\n};\n\nRightPanel.propTypes = {\n    getCoinData: PropTypes.func.isRequired,\n    coinDataLoad: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    coinData: state.coinData\n});\nexport default connect(mapStateToProps, { getCoinData })(\n    withRouter(RightPanel)\n);\n","import axios from 'axios';\nimport { GET_COINS, GET_COINS_ERROR } from './types';\n\nexport const getCoins = () => async dispatch => {\n    try {\n        const res = await axios.get(\n            `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false&price_change_percentage=24h%2C7d%2C30d%2C1y`\n        );\n        dispatch({\n            type: GET_COINS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_COINS_ERROR,\n            payload: {\n                msg: err,\n                status: err\n            }\n        });\n    }\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { getCoins } from '../actions/coinsList';\nimport { Spinner } from './Spinner';\n\nconst Wrapper = styled.div`\n    margin-top: 1em;\n    height: 5vh;\n    @media (max-width: 768px) {\n        position: relative;\n        /* top: 23em; */\n        width: 300px;\n    }\n`;\n\nconst Dropdown = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    @media (max-width: 768px) {\n        flex-direction: column;\n        /* position: relative;\n        top: 25em; */\n    }\n`;\n\nconst StyledSelect = styled.select`\n    padding: 4px 8px;\n    border: 1px solid gray;\n    border-radius: 4px;\n    font-size: 1em;\n    margin-bottom: 8px;\n    margin-right: 1em;\n    box-sizing: border-box;\n    height: 40px;\n    background: transparent;\n    color: #bfbdbc;\n    :focus {\n        outline: none !important;\n    }\n    @media (max-width: 768px) {\n        position: relative;\n        /* bottom: 25em; */\n        width: 300px;\n    }\n`;\n\nconst Input = styled.input.attrs(props => ({\n    type: props.num ? 'number' : null\n}))`\n    padding: 4px 8px;\n    border: 1px solid rgb(235, 233, 233, 0.3);\n    border-left: 1px solid transparent;\n    border-top-right-radius: 4px;\n    border-bottom-right-radius: 4px;\n    font-size: 1em;\n    margin-bottom: 8px;\n    box-sizing: border-box;\n    height: 40px;\n    background: transparent;\n    color: #bfbdbc;\n    :focus {\n        outline: none !important;\n    }\n    width: 50%;\n`;\n\nconst Label = styled.label`\n    background: #44535d;\n    align-self: center;\n    color: white;\n    padding: 10px 20px 10px 20px;\n    margin-bottom: 8px;\n    border: 1px solid rgb(235, 233, 233, 0.1);\n    border-top-left-radius: 4px;\n    border-bottom-left-radius: 4px;\n`;\n\nconst TestDiv = styled.div`\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: row;\n    @media (max-width: 768px) {\n        display: none;\n    }\n`;\n\nconst CoinListDropdown = ({\n    getCoins,\n    coinsList: { coinsListData },\n    onChange,\n    coin\n}) => {\n    useEffect(() => {\n        getCoins();\n    }, [getCoins]);\n\n    const [val, setVal] = useState('');\n\n    const clickHandler = params => {\n        onChange(params);\n    };\n\n    const idList = [];\n    for (let i = 0; i < coinsListData.length; i++) {\n        idList.push(coinsListData[i].id);\n    }\n    const id = idList.indexOf(coin);\n\n    return (\n        <Wrapper>\n            {coinsListData.length == 0 ? (\n                <Spinner />\n            ) : (\n                <Dropdown>\n                    <StyledSelect onChange={e => clickHandler(e.target.value)}>\n                        {coinsListData.map((item, index) => (\n                            <option key={index} id={item.id}>\n                                {item.id}\n                            </option>\n                        ))}\n                    </StyledSelect>\n                    <TestDiv>\n                        <Label>{coinsListData[id].symbol}</Label>\n                        <Input\n                            num={true}\n                            onChange={e => setVal(e.target.value)}\n                        />\n                        <span\n                            style={{\n                                color: 'white',\n                                fontSize: '1.5em',\n                                marginTop: '5px'\n                            }}\n                            className='material-icons'\n                        >\n                            compare_arrows\n                        </span>\n                        <Label>USD</Label>\n                        <Input\n                            value={val * coinsListData[id].current_price}\n                            readOnly\n                        />\n                    </TestDiv>\n                </Dropdown>\n            )}\n        </Wrapper>\n    );\n};\n\nCoinListDropdown.propTypes = {\n    getCoins: PropTypes.func.isRequired,\n    coinsList: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    coinsList: state.coinsList\n});\nexport default connect(mapStateToProps, { getCoins })(CoinListDropdown);\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport ChartComponent from './Chart_Component';\nimport ChartComponent3 from './Chart_Component3';\nimport TopScoreCards from './TopScoreCards';\nimport RightPanel from './RightPanel';\nimport CoinListDropdown from './CoinListDropdown';\n\nconst Panel = styled.div`\n    display: flex;\n    /* flex-direction: column; */\n    justify-content: space-around;\n    flex-direction: row;\n    width: 80%;\n    height: 98vh;\n    margin: 0 auto;\n    position: relative;\n    left: 2em;\n    @media (max-width: 768px) {\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-evenly;\n        left: 0;\n        height: 98vh;\n    }\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    border-radius: 20px;\n    height: 50vh;\n    margin-top: 1em;\n    @media (max-width: 768px) {\n        top: 30em;\n        /* top: 5em; */\n        width: 100%;\n        height: 50vh;\n    }\n    @media (min-width: 2560px) {\n        height: 100%;\n    }\n    @media (min-width: 1440px) {\n        height: 55vh;\n    }\n`;\n\nconst TopSectionWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    /* height: 37vh; */\n    @media (max-width: 768px) {\n        /* position: relative;\n        top: 3em;\n        height: fit-content; */\n    }\n`;\n\nconst RightPanelWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 98vh;\n    @media (max-width: 768px) {\n        /* position: relative;\n        top: 2em; */\n        /* width: 100%; */\n        margin: 2em;\n    }\n`;\n\nconst TopWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 98vh;\n    @media (max-width: 768px) {\n        position: relative;\n        /* top: 25em; */\n    }\n`;\n\nconst TopChart = ({ coinData: { coinDataLoad } }) => {\n    const [param, setParam] = useState({\n        coin: 'bitcoin',\n        currency: 'usd',\n        days: '30',\n        interval: 'daily'\n    });\n\n    const handleClick = currency => {\n        param.coin = currency;\n        setParam({ ...param });\n    };\n\n    return (\n        <Panel>\n            <TopWrapper>\n                <TopSectionWrapper>\n                    <CoinListDropdown\n                        onChange={handleClick}\n                        coin={param.coin}\n                    />\n                    <TopScoreCards param={param} />\n                </TopSectionWrapper>\n                <Wrapper>\n                    <ChartComponent param={param} />\n                    <ChartComponent3 param={param} />\n                </Wrapper>\n            </TopWrapper>\n            <RightPanelWrapper>\n                <RightPanel coinDataLoad={coinDataLoad} coin={param.coin} />\n            </RightPanelWrapper>\n        </Panel>\n    );\n};\n\nconst mapStateToProps = state => ({\n    coinData: state.coinData\n});\nexport default connect(mapStateToProps)(withRouter(TopChart));\n","import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport styled, { css, keyframes } from 'styled-components';\nimport { rgba, modularScale } from 'polished';\n\nconst Card = styled.div`\n    position: relative;\n    width: 280px;\n    height: 250px;\n    margin: 2rem;\n    overflow: hidden;\n    border-radius: 1rem;\n    background: white;\n    padding-top: 7rem;\n    padding-bottom: 1rem;\n    box-shadow: 0 4px 15px ${rgba('black', 0.05)};\n    filter: drop-shadow(1px 4px 12px #101820);\n    opacity: 0.9;\n    border: 1px solid #cbcdcf;\n    background: linear-gradient(\n        111.29deg,\n        rgba(34, 41, 46, 0.53) -1.83%,\n        rgba(27, 32, 37, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    color: white;\n`;\n\nconst Topbar = styled.div`\n    position: absolute;\n    bottom: 62em;\n    left: 50%;\n    display: flex;\n    align-items: flex-end;\n    justify-content: center;\n    width: 800px;\n    height: 800px;\n    transform: translate(-50%, 86%);\n    border-radius: 50%;\n    box-shadow: 0 4px 15px ${rgba('black', 0.1)};\n    filter: drop-shadow(1px 4px 12px #101820);\n    opacity: 0.9;\n    background: linear-gradient(\n        111.29deg,\n        rgba(189, 197, 203, 0.53) -1.83%,\n        rgba(27, 32, 37, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n`;\n\nconst TopIcon = styled.div`\n    color: ${props => rgba('white', props.isActive ? 0.85 : 0.5)};\n    height: 3rem;\n    width: 3rem;\n    padding: 0 2rem;\n    transform: ${props =>\n        props.isActive ? `scale(2) translateY(8px)` : `scale(1) translateY(0)`};\n    :hover {\n        height: 4.5em;\n        width: 4.5em;\n    }\n`;\n\nconst Image = styled.img`\n    height: 3.5em;\n    margin-top: 1em;\n    filter: drop-shadow(1px 4px 12px #22292e);\n    :hover {\n        height: 4.5em;\n    }\n`;\n\nconst ListWrapper = styled.div`\n    position: relative;\n    align-self: center;\n    left: 1rem;\n    margin: auto;\n`;\n\nconst CoinItem = props => {\n    return (\n        <Card>\n            <Topbar>\n                <TopIcon>\n                    <Image src={props.image}></Image>\n                </TopIcon>\n            </Topbar>\n            <Scrollbars>\n                <ListWrapper>\n                    <p>Name: {props.name}</p>\n                    <p>Current Price: {props.current_price} USD</p>\n                    <p>\n                        Circulating Supply:{' '}\n                        {Math.round(props.circulating_supply)}\n                    </p>\n                    <p>Total Supply: {Math.round(props.total_supply)}</p>\n                    <p>Total Volume: {props.total_volume}</p>\n                </ListWrapper>\n            </Scrollbars>\n        </Card>\n    );\n};\n\nexport default CoinItem;\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { getCoins } from '../actions/coinsList';\nimport CoinItem from './CoinItem';\nimport { Spinner } from './Spinner';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    position: relative;\n    justify-content: space-around;\n    height: 92vh;\n    overflow: scroll;\n`;\n\nconst CoinList = ({ getCoins, coinsList: { coinsListData } }) => {\n    useEffect(() => {\n        getCoins();\n    }, [getCoins]);\n\n    return (\n        <Wrapper>\n            {coinsListData.length == 0 ? (\n                <Spinner />\n            ) : (\n                coinsListData.map(item => (\n                    <CoinItem\n                        image={item.image}\n                        id={item.id}\n                        current_price={item.current_price}\n                        high_24h={item.high_24h}\n                        low_24h={item.low_24h}\n                        circulating_supply={item.circulating_supply}\n                        name={item.name}\n                        total_supply={item.total_supply}\n                        total_volume={item.total_volume}\n                    />\n                ))\n            )}\n        </Wrapper>\n    );\n};\n\nCoinList.propTypes = {\n    getCoins: PropTypes.func.isRequired,\n    coinsList: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    coinsList: state.coinsList\n});\nexport default connect(mapStateToProps, { getCoins })(withRouter(CoinList));\n","import axios from 'axios';\nimport { GET_EXCHANGES, GET_EXCHANGES_ERROR } from './types';\n\nexport const getExchanges = () => async dispatch => {\n    try {\n        const res = await axios.get(\n            `https://api.coingecko.com/api/v3/exchanges`\n        );\n        dispatch({\n            type: GET_EXCHANGES,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_EXCHANGES_ERROR,\n            payload: {\n                msg: err,\n                status: err\n            }\n        });\n    }\n};\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { rgba, modularScale } from 'polished';\nimport { getExchanges } from '../actions/exchanges';\nimport { Spinner } from './Spinner';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    position: relative;\n    justify-content: space-around;\n    height: 90vh;\n    overflow: scroll;\n    margin: 8px 2em;\n    border: 1px solid transparent;\n    border-radius: 10px;\n    border-bottom: 1px solid #8c9aa3;\n`;\n\nconst TableWrapper = styled.div`\n    box-shadow: 0 4px 15px ${rgba('black', 0.1)};\n    filter: drop-shadow(1px 4px 12px #101820);\n    opacity: 0.9;\n    background: linear-gradient(\n        111.29deg,\n        rgba(34, 41, 46, 0.53) -1.83%,\n        rgba(27, 32, 37, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n    width: 100%;\n`;\n\nconst Table = styled.table`\n    border-radius: 5px;\n    font-size: 12px;\n    font-weight: normal;\n    border: none;\n    border-collapse: collapse;\n    width: 100%;\n    max-width: 100%;\n    white-space: nowrap;\n`;\n\nconst TD = styled.td`\n    text-align: center;\n    font-size: 12px;\n    padding: 8px;\n    color: ${props => (props.color ? '#bacdca' : null)};\n`;\n\nconst TH = styled.th`\n    text-align: center;\n    padding: 8px;\n    color: #ffffff;\n    background: #5b6f7c;\n    position: sticky;\n    top: 0;\n    height: 2em;\n`;\n\nconst TR = styled.tr`\n    color: white;\n`;\n\nconst TableHead = styled.thead`\n    color: #ffffff;\n`;\n\nconst UrlLink = styled.a`\n    float: left;\n    color: white;\n    text-decoration: none;\n    :hover {\n        color: #ef7b5f;\n    }\n`;\n\nconst Exchanges = ({ getExchanges, exchanges: { exchanges } }) => {\n    useEffect(() => {\n        getExchanges();\n    }, []);\n\n    const tableEntries = exchanges.map((elem, i) => {\n        return (\n            <TR key={i}>\n                <TD color={true}>{elem.name}</TD>\n                <TD>{elem.id}</TD>\n                <TD>{elem.country}</TD>\n                <TD>{elem.year_established}</TD>\n                <TD>\n                    <UrlLink target='_blank' href={elem.url}>\n                        {elem.url}\n                    </UrlLink>\n                </TD>\n                <TD color={true}>{elem.trade_volume_24h_btc.toFixed(2)}</TD>\n                <TD>{elem.trust_score}</TD>\n                <TD>{elem.trust_score_rank}</TD>\n            </TR>\n        );\n    });\n\n    return (\n        <Wrapper>\n            {exchanges.length == 0 ? (\n                <Spinner />\n            ) : (\n                <TableWrapper>\n                    <Table>\n                        <TableHead>\n                            <TR>\n                                <TH>Name</TH>\n                                <TH>id</TH>\n                                <TH>country</TH>\n                                <TH>year established</TH>\n                                <TH>website</TH>\n                                <TH>Trade vol 24h btc</TH>\n                                <TH>Trust score</TH>\n                                <TH>Trust score rank</TH>\n                            </TR>\n                        </TableHead>\n                        {tableEntries}\n                    </Table>\n                </TableWrapper>\n            )}\n        </Wrapper>\n    );\n};\n\nExchanges.propTypes = {\n    getExchanges: PropTypes.func.isRequired,\n    exchanges: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    exchanges: state.exchanges\n});\nexport default connect(mapStateToProps, { getExchanges })(\n    withRouter(Exchanges)\n);\n","import axios from 'axios';\nimport timeConverter from '../utils/timeConverter';\nimport { GET_EXCHANGE_VOLUME, GET_EXCHANGE_VOLUME_ERROR } from './types';\n\nexport const getExchangeVolume = id => async dispatch => {\n    try {\n        const res = await axios.get(\n            `https://api.coingecko.com/api/v3/exchanges/${id}/volume_chart?days=30`\n        );\n\n        let volumes = [];\n        let dates = [];\n        let data = [];\n        for (let i = 0; i < res.data.length; i++) {\n            volumes.push(res.data[i][1]);\n            dates.push(timeConverter(res.data[i][0]));\n        }\n        data.push(volumes, dates);\n\n        dispatch({\n            type: GET_EXCHANGE_VOLUME,\n            payload: data\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_EXCHANGE_VOLUME_ERROR,\n            payload: {\n                msg: err,\n                status: err\n            }\n        });\n    }\n};\n","import axios from 'axios';\nimport { GET_EXCHANGE, GET_EXCHANGE_ERROR } from './types';\n\nexport const getExchangeById = id => async dispatch => {\n    try {\n        const res = await axios.get(\n            `https://api.coingecko.com/api/v3/exchanges/${id}`\n        );\n        dispatch({\n            type: GET_EXCHANGE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_EXCHANGE_ERROR,\n            payload: {\n                msg: err,\n                status: err\n            }\n        });\n    }\n};\n","import React, { useEffect } from 'react';\nimport Chart from 'chart.js';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getExchangeVolume } from '../actions/exchangeVolume';\n\nconst Canvas = styled.canvas`\n    filter: drop-shadow(1px 4px 12px #101820);\n    border-radius: 20px;\n    margin-top: 20px;\n    background: linear-gradient(\n        111.29deg,\n        rgba(255, 255, 255, 0.1) -1.83%,\n        rgba(255, 255, 255, 0) 189.95%\n    );\n\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n`;\n\nconst CanvasWrapper = styled.div`\n    width: 750px;\n    height: 60%;\n    @media (max-width: 768px) {\n        width: 300px;\n    }\n`;\n\nconst myChart = (props, param) => {\n    const ctx = document.getElementById('my_Chart2');\n    let c = ctx.getContext('2d');\n    let gradientLine = c.createLinearGradient(0, 0, 0, ctx.height);\n    gradientLine.addColorStop(0, '#8c9aa3');\n    gradientLine.addColorStop(1, '#5b6f7c');\n    if (window.myChart) window.myChart.destroy();\n    window.myChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: props[1],\n            datasets: [\n                {\n                    label: 'volume',\n                    // backgroundColor: gradientLine,\n                    borderColor: '#d6dbde',\n                    data: props[0],\n                    borderWidth: 1\n                }\n            ]\n        },\n        options: {\n            responsive: true,\n            scaleFontColor: 'white',\n            maintainAspectRatio: false,\n            layout: {\n                padding: {\n                    top: 5,\n                    left: 15,\n                    right: 15,\n                    bottom: 15\n                }\n            },\n            scales: {\n                yAxes: [\n                    {\n                        ticks: {\n                            beginAtZero: false,\n                            fontColor: 'white',\n                            display: true\n                        }\n                    }\n                ],\n                xAxes: [\n                    {\n                        ticks: {\n                            beginAtZero: false,\n                            fontColor: 'white',\n                            display: true\n                        }\n                    }\n                ]\n            },\n            tooltips: {\n                mode: 'nearest'\n            },\n            title: {\n                display: true,\n                text: `${param} volumes`,\n                fontSize: 20,\n                fontColor: 'white'\n            },\n            legend: {\n                labels: {\n                    boxWidth: 0\n                }\n            }\n            // events: ['click']\n        }\n    });\n};\n\nfunction Chart_Component2({\n    exchangeVolumes: { exchangeVolumeLoad, params },\n    param\n}) {\n    useEffect(() => {\n        myChart(exchangeVolumeLoad, param);\n    }, [myChart, exchangeVolumeLoad]);\n\n    return (\n        <CanvasWrapper>\n            <Canvas id='my_Chart2' />\n        </CanvasWrapper>\n    );\n}\n\nChart_Component2.propTypes = {\n    getExchangeVolume: PropTypes.func.isRequired,\n    exchangeVolumeLoad: PropTypes.object.isRequired,\n    params: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    exchangeVolumes: state.exchangeVolumes,\n    exchanges: state.exchanges\n});\nexport default connect(mapStateToProps, {\n    getExchangeVolume\n})(Chart_Component2);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { rgba, modularScale } from 'polished';\nimport { Spinner } from './Spinner';\nimport { getExchangeById } from '../actions/exchangesById';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    position: relative;\n    /* top: 2rem; */\n    justify-content: space-around;\n    height: 100%;\n    overflow: scroll;\n    border: 1px solid transparent;\n    border-radius: 20px;\n`;\n\nconst TableWrapper = styled.div`\n    box-shadow: 0 4px 15px ${rgba('black', 0.1)};\n    filter: drop-shadow(1px 4px 12px #101820);\n    opacity: 0.9;\n    background: linear-gradient(\n        111.29deg,\n        rgba(108, 114, 119, 0.53) -1.83%,\n        rgba(45, 54, 61, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n`;\n\nconst Table = styled.table`\n    border-radius: 5px;\n    font-size: 13px;\n    font-weight: normal;\n    border-collapse: collapse;\n    width: 100%;\n    max-width: 100%;\n    white-space: nowrap;\n    overflow: scroll;\n    @media (max-width: 768px) {\n        display: none;\n    }\n`;\n\nconst TD = styled.td`\n    text-align: center;\n    font-size: 13px;\n    padding: 8px;\n    color: ${props => (props.color ? '#bacdca' : null)};\n`;\n\nconst TH = styled.th`\n    text-align: center;\n    padding: 8px;\n    color: #ffffff;\n    background: linear-gradient(\n        111.29deg,\n        rgba(34, 41, 46, 1) -1.83%,\n        rgba(27, 32, 37, 0.9) 189.95%\n    );\n    position: sticky;\n    top: 0;\n    height: 2em;\n`;\n\nconst TR = styled.tr`\n    color: white;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst TableHead = styled.thead`\n    color: #ffffff;\n    border-bottom: 1px solid white;\n`;\n\nconst TickerTable = ({ exchange: { exchange }, param }) => {\n    useEffect(() => {\n        let mounted = true;\n        if (mounted) {\n            getExchangeById(param);\n        }\n        return function cleanup() {\n            mounted = false;\n        };\n    }, [param, getExchangeById]);\n\n    return (\n        <Wrapper>\n            {Object.keys(exchange).length < 1 ? (\n                <Spinner />\n            ) : (\n                <TableWrapper>\n                    <Table>\n                        <TableHead>\n                            <TR>\n                                <TH>Base</TH>\n                                <TH>Target</TH>\n                                <TH>Volume</TH>\n                                <TH>Converted Vol</TH>\n                                <TH>Bid ask spread %</TH>\n                                <TH>Anomaly</TH>\n                                <TH>Stale</TH>\n                                <TH>Last fetched</TH>\n                            </TR>\n                        </TableHead>\n                        <tbody>\n                            {exchange.tickers.map((elem, i) => {\n                                return (\n                                    <TR key={i}>\n                                        <TD color='true'>{elem.base}</TD>\n                                        <TD>{elem.target}</TD>\n                                        <TD>{elem.volume.toFixed(2)}</TD>\n                                        <TD>\n                                            {elem.converted_volume.btc.toFixed(\n                                                2\n                                            )}\n                                        </TD>\n                                        <TD>\n                                            {elem.bid_ask_spread_percentage.toFixed(\n                                                2\n                                            )}\n                                        </TD>\n                                        <TD> {elem.is_anomaly.toString()}</TD>\n                                        <TD>{elem.is_stale.toString()}</TD>\n                                        <TD>{elem.last_fetch_at}</TD>\n                                    </TR>\n                                );\n                            })}\n                        </tbody>\n                    </Table>\n                </TableWrapper>\n            )}\n        </Wrapper>\n    );\n};\n\nTickerTable.propTypes = {\n    getExchangeById: PropTypes.func.isRequired,\n    exchange: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    exchange: state.exchange\n});\nexport default connect(mapStateToProps, {\n    getExchangeById\n})(TickerTable);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport ScoreCard from './ScoreCard';\nimport { Spinner } from './Spinner';\nimport { getExchanges } from '../actions/exchanges';\n\nconst ScoreCardWrapper = styled.div`\n    display: flex;\n    position: relative;\n    top: 1em;\n    margin: 1em 1em 1em 0;\n    width: 100%;\n    border-radius: 20px;\n    justify-content: space-between;\n    @media (max-width: 768px) {\n        flex-direction: column;\n        align-items: center;\n    }\n`;\n\nconst icons = [\n    <i className='fas fa-parachute-box'></i>,\n    <span className='material-icons'>loop</span>,\n    <span className='material-icons'>monetization_on</span>\n];\n\nconst ExchangeScoreCards = ({\n    getExchanges,\n    exchanges: { exchanges },\n    param\n}) => {\n    useEffect(() => {\n        getExchanges();\n    }, []);\n\n    const idList = [];\n    for (let i = 0; i < exchanges.length; i++) {\n        idList.push(exchanges[i].id);\n    }\n    const id = idList.indexOf(param);\n\n    console.log('exchanges[id]: ', exchanges);\n    console.log('id is: ', id);\n    console.log('param is: ', param);\n\n    return (\n        <>\n            {exchanges.length < 1 ? (\n                <Spinner />\n            ) : (\n                <ScoreCardWrapper>\n                    <ScoreCard\n                        text={`${exchanges[id].name} Vol 24h:   `}\n                        value={exchanges[id].trade_volume_24h_btc.toFixed(2)}\n                        icon={icons[0]}\n                        symbolIs={'btc'}\n                        transparent={true}\n                    />\n                    <ScoreCard\n                        text={`${exchanges[id].name} Vol Normalized 24h:   `}\n                        value={exchanges[\n                            id\n                        ].trade_volume_24h_btc_normalized.toFixed(2)}\n                        icon={icons[1]}\n                        symbolIs={'btc'}\n                        transparent={true}\n                    />\n                </ScoreCardWrapper>\n            )}\n        </>\n    );\n};\n\nExchangeScoreCards.propTypes = {\n    getExchanges: PropTypes.func.isRequired,\n    exchanges: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    exchanges: state.exchanges\n});\n\nexport default connect(mapStateToProps, { getExchanges })(ExchangeScoreCards);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { rgba, modularScale } from 'polished';\n\nimport { Spinner } from './Spinner';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    position: relative;\n    top: 8px;\n    justify-content: space-around;\n    height: 98%;\n    overflow: scroll;\n    border-bottom: 1px solid #8c9aa3;\n    border-radius: 10px;\n    margin: 0 2em;\n    @media (max-width: 768px) {\n        display: ${props => (props.hide ? 'none' : null)};\n    }\n`;\n\nconst TableWrapper = styled.div`\n    box-shadow: 0 4px 15px ${rgba('black', 0.1)};\n    filter: drop-shadow(1px 4px 12px #101820);\n    opacity: 0.9;\n    background: linear-gradient(\n        111.29deg,\n        rgba(34, 41, 46, 0.53) -1.83%,\n        rgba(27, 32, 37, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n`;\n\nconst Table = styled.table`\n    border-radius: 5px;\n    font-size: 13px;\n    font-weight: normal;\n    border-bottom: none;\n    border-collapse: collapse;\n    width: 100%;\n    max-width: 100%;\n    white-space: nowrap;\n    /* height: 70%; */\n    overflow: scroll;\n    @media (max-width: 768px) {\n        display: none;\n    }\n`;\n\nconst TD = styled.td`\n    text-align: center;\n    font-size: 13px;\n    padding: 8px;\n    color: ${props => (props.color ? '#bacdca' : null)};\n`;\n\nconst TH = styled.th`\n    text-align: center;\n    padding: 8px;\n    color: #ffffff;\n    background: #5b6f7c;\n    position: sticky;\n    top: 0;\n    height: 2em;\n    z-index: 20;\n`;\n\nconst TR = styled.tr`\n    color: white;\n`;\n\nconst TableHead = styled.thead`\n    color: #ffffff;\n`;\n\nlet color = '#37434a';\n\nconst Button = styled.button`\n    border-bottom: 1px solid ${rgba('white', 0.25)};\n    color: white;\n    font-size: 13px;\n    background: ${color};\n    height: 2em;\n    width: 100%;\n    opacity: 0.8;\n    backdrop-filter: blur(20px);\n    border-radius: 4px;\n    z-index: -1;\n`;\n\nconst ExchangeIdTable = ({ exchanges, handleClick }) => {\n    const clickHandler = id => {\n        handleClick(id);\n    };\n    return (\n        <Wrapper hide={true}>\n            {exchanges.length < 1 ? (\n                <Spinner />\n            ) : (\n                <TableWrapper>\n                    <Table>\n                        <TableHead>\n                            <TR>\n                                <TH>Exchange</TH>\n                                <TH>Id</TH>\n                            </TR>\n                        </TableHead>\n                        {exchanges.map((elem, i) => {\n                            return (\n                                <TR key={i}>\n                                    <TD color={true}>{elem.name}</TD>\n\n                                    <TD>\n                                        <Button\n                                            onClick={() => {\n                                                clickHandler(elem.id);\n                                            }}\n                                        >\n                                            {elem.id}\n                                        </Button>\n                                    </TD>\n                                </TR>\n                            );\n                        })}\n                    </Table>\n                </TableWrapper>\n            )}\n        </Wrapper>\n    );\n};\n\nexport default connect()(ExchangeIdTable);\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { rgba } from 'polished';\nimport { getExchangeVolume } from '../actions/exchangeVolume';\nimport { getExchanges } from '../actions/exchanges';\nimport { getExchangeById } from '../actions/exchangesById';\nimport Chart_Component2 from './Chart_Component2';\nimport TickerTable from './TickerTable';\nimport { Spinner } from './Spinner';\nimport ExchangeScoreCards from './ExchangeScoreCards';\nimport ExchangeIdTable from './ExchangeIdTable';\n\nconst transition = css`\n    transition: transform 0.45s;\n`;\n\nconst Card = styled.div`\n    overflow: hidden;\n    position: relative;\n    width: 780px;\n    max-width: 900px;\n    /* margin: 0 auto; */\n`;\nconst Row = styled.div`\n    position: relative;\n`;\nconst Underline = styled.div`\n    position: relative;\n    left: 0;\n    bottom: 0;\n    top: 3em;\n    width: 390px;\n    height: 8px;\n    background: #e47656;\n    transform: translateX(${p => (p.active === 0 ? 0 : p.active * 100)}%);\n    ${transition};\n`;\n\nconst Button = styled.button`\n    position: relative;\n    right: 0;\n    bottom: 0;\n    border: 1px solid transparent;\n    border-bottom: 1px solid ${rgba('white', 0.25)};\n    ${props =>\n        props.borderTop\n            ? css`\n                  border-top-left-radius: 10px;\n              `\n            : css`\n                  border-top-right-radius: 10px;\n              `}\n    color: ${p => rgba('white', p.active ? 1 : 0.25)};\n    font-size: 20px;\n    background: #5b6f7c;\n    height: 2em;\n    width: 100%;\n    opacity: 0.8;\n    backdrop-filter: blur(20px);\n    @media (max-width: 768px) {\n        display: ${props => (props.hide ? 'none' : null)};\n    }\n`;\n\nconst Content = styled.div`\n    height: 90%;\n    display: flex;\n    justify-content: space-between;\n    transform: translate(${p => (p.active === 0 ? 0 : `-${p.active * 820}px`)});\n    ${transition};\n`;\n\nconst Tab = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    width: 780px;\n    margin: 2em 2em 0 2em;\n    @media (max-width: 768px) {\n        display: ${props => (props.hide ? 'none' : null)};\n    }\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    position: relative;\n    border-radius: 20px;\n    height: 90vh;\n    margin: 0 auto;\n`;\n\nconst tabs = ['volumes', 'tickers'];\n\nconst ExchangeVolume = ({\n    getExchangeVolume,\n    getExchangeById,\n    exchangeVolumes: { exchangeVolumeLoad, params },\n    exchanges: { exchanges }\n}) => {\n    const [param, setParam] = useState('gdax');\n\n    useEffect(() => {\n        let mounted = true;\n        if (mounted) {\n            getExchangeVolume(param);\n            getExchanges();\n            getExchangeById(param);\n        }\n        return function cleanup() {\n            mounted = false;\n        };\n    }, [param]);\n\n    const idList = [];\n    for (let i = 0; i < exchanges.length; i++) {\n        idList.push(exchanges[i].id);\n    }\n    let idIndex = idList.indexOf('aax');\n\n    const [active, setActive] = useState(0);\n\n    const Tabs = ({ active, setActive }) => (\n        <Row>\n            <Underline active={active} />\n            <div style={{ display: 'flex' }}>\n                <Button\n                    active={active === 0}\n                    onClick={() => setActive(0)}\n                    hide={true}\n                    borderTop={true}\n                >\n                    {tabs[0]}\n                </Button>\n                <Button\n                    active={active === 1}\n                    onClick={() => setActive(1)}\n                    hide={true}\n                >\n                    {tabs[1]}\n                </Button>\n            </div>\n        </Row>\n    );\n\n    const handleClick = id => {\n        setParam(id);\n    };\n\n    return (\n        <>\n            {exchangeVolumeLoad.length < 1 ? (\n                <Spinner />\n            ) : (\n                <Wrapper>\n                    <ExchangeIdTable\n                        handleClick={handleClick}\n                        exchanges={exchanges}\n                        params={params}\n                    />\n                    <Card>\n                        <Tabs active={active} setActive={setActive} />\n                        <Content active={active}>\n                            <Tab>\n                                <ExchangeScoreCards param={param} />\n                                <Chart_Component2 param={param} />\n                            </Tab>\n                            <Tab hide={true}>\n                                <TickerTable param={param} />\n                            </Tab>\n                        </Content>\n                    </Card>\n                </Wrapper>\n            )}\n        </>\n    );\n};\n\nExchangeVolume.propTypes = {\n    getExchangeVolume: PropTypes.func.isRequired,\n    getExchangeById: PropTypes.func.isRequired,\n    exchangeVolumeLoad: PropTypes.object.isRequired,\n    params: PropTypes.object.isRequired,\n    getExchanges: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    exchangeVolumes: state.exchangeVolumes,\n    exchanges: state.exchanges\n});\nexport default connect(mapStateToProps, {\n    getExchanges,\n    getExchangeVolume,\n    getExchangeById\n})(withRouter(ExchangeVolume));\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport Chart from 'chart.js';\n\nconst CanvasWrapper = styled.div`\n    width: 750px;\n    margin: 2em;\n    position: relative;\n    top: 3em;\n    margin-top: 8px;\n    @media (max-width: 768px) {\n        width: 300px;\n    }\n    @media (min-width: 2560px) {\n        width: 1000px;\n    }\n`;\n\nconst Canvas = styled.canvas`\n    filter: drop-shadow(1px 4px 12px #101820);\n    border-radius: 20px;\n    margin-bottom: 20px;\n    background: linear-gradient(\n        111.29deg,\n        rgba(255, 255, 255, 0.43) -1.83%,\n        rgba(255, 255, 255, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n`;\n\nconst areaChart = data => {\n    const ctx = document.getElementById('my_Chart4');\n    let c = ctx.getContext('2d');\n    const marketCapPercentage = data.globalDataLoad.market_cap_percentage;\n    const labels = Object.keys(marketCapPercentage);\n    const values = Object.values(marketCapPercentage);\n    if (window.areaChart) window.areaChart.destroy();\n    window.areaChart = new Chart(ctx, {\n        data: {\n            labels: labels,\n            datasets: [\n                {\n                    data: values,\n                    borderColor: '#153144',\n                    borderWidth: 1,\n                    hoverBackgroundColor: '#e47656',\n                    hoverBorderColor: 'white',\n                    backgroundColor: '#e47656'\n                }\n            ]\n        },\n        type: 'bar',\n        options: {\n            responsive: true,\n            scaleFontColor: 'white',\n            maintainAspectRatio: true,\n            layout: {\n                padding: {\n                    top: 5,\n                    left: 15,\n                    right: 15,\n                    bottom: 15\n                }\n            },\n            scales: {\n                yAxes: [\n                    {\n                        ticks: {\n                            beginAtZero: false,\n                            fontColor: 'white',\n                            display: true\n                        }\n                    }\n                ],\n                xAxes: [\n                    {\n                        ticks: {\n                            beginAtZero: false,\n                            fontColor: 'white',\n                            display: true\n                        }\n                    }\n                ]\n            },\n            tooltips: {\n                mode: 'nearest'\n            },\n            title: {\n                display: true,\n                text: `market cap %`,\n                fontSize: 20,\n                fontColor: 'white'\n            },\n            legend: {\n                labels: {\n                    boxWidth: 0\n                }\n            }\n            // events: ['click']\n        }\n    });\n};\n\nconst PolarAreaChart = globalDataLoad => {\n    useEffect(() => {\n        areaChart(globalDataLoad);\n    }, [globalDataLoad]);\n\n    return (\n        <CanvasWrapper>\n            <Canvas id='my_Chart4' />\n        </CanvasWrapper>\n    );\n};\n\nexport default PolarAreaChart;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { rgba, modularScale } from 'polished';\nimport { Spinner } from './Spinner';\n\nconst TableWrapper = styled.div`\n    box-shadow: 0 4px 15px ${rgba('black', 0.1)};\n    filter: drop-shadow(1px 4px 12px #101820);\n    opacity: 0.9;\n    background: linear-gradient(\n        111.29deg,\n        rgba(108, 114, 119, 0.53) -1.83%,\n        rgba(45, 54, 61, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n    overflow: scroll;\n    border-bottom: 1px solid white;\n    border-radius: 10px;\n    width: 40%;\n    margin-top: 8px;\n`;\n\nconst Table = styled.table`\n    border-radius: 5px;\n    font-size: 13px;\n    font-weight: normal;\n    border-collapse: collapse;\n    width: 100%;\n    max-width: 100%;\n    white-space: nowrap;\n    overflow: scroll;\n    @media (max-width: 768px) {\n        display: none;\n    }\n`;\n\nconst TD = styled.td`\n    text-align: center;\n    font-size: 13px;\n    padding: 8px;\n    color: ${props => (props.color ? '#bacdca' : null)};\n`;\n\nconst TH = styled.th`\n    text-align: center;\n    padding: 8px;\n    color: #ffffff;\n    background: linear-gradient(\n        111.29deg,\n        rgba(34, 41, 46, 1) -1.83%,\n        rgba(27, 32, 37, 0.9) 189.95%\n    );\n    position: sticky;\n    top: 0;\n    height: 2em;\n`;\n\nconst TR = styled.tr`\n    color: white;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst TableHead = styled.thead`\n    color: #ffffff;\n    border-bottom: 1px solid white;\n`;\n\nconst GlobalTable = coins => {\n    return (\n        <>\n            {coins.length < 1 ? (\n                <Spinner />\n            ) : (\n                <TableWrapper>\n                    <Table>\n                        <TableHead>\n                            <TR>\n                                <TH>Coin</TH>\n                                <TH>Total Volume</TH>\n                                <TH>Total Market Cap</TH>\n                            </TR>\n                        </TableHead>\n                        <tbody>\n                            {coins.coins.map((elem, i) => {\n                                return (\n                                    <TR>\n                                        <TD color='true'>{elem.coin}</TD>\n                                        <TD color='true'>{elem.volume}</TD>\n                                        <TD color='true'>{elem.marketCap}</TD>\n                                    </TR>\n                                );\n                            })}\n                        </tbody>\n                    </Table>\n                </TableWrapper>\n            )}\n        </>\n    );\n};\n\nexport default GlobalTable;\n\n// GlobalTable.propTypes = {\n//     // getExchangeVolume: PropTypes.func.isRequired,\n//     getExchangeById: PropTypes.func.isRequired,\n//     exchange: PropTypes.object.isRequired\n// };\n\n// const mapStateToProps = state => ({\n//     exchange: state.exchange\n// });\n// export default connect(mapStateToProps, {\n//     getExchangeById\n//     // getExchangeVolume\n// })(GlobalTable);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledUl = styled.ul`\n    list-style: none;\n    list-style-image: url(../images/active_currencies.png);\n    width: 60%;\n`;\n\nconst StyledList = styled.li`\n    text-align: left;\n    font-size: 13px;\n    /* line-height: 1.7; */\n    padding: 5px;\n    color: #eff1f2;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n    ::marker {\n        color: #e8431b;\n    }\n`;\n\nconst GlobalList = globalDataLoad => {\n    return (\n        <>\n            <StyledUl>\n                <StyledList>\n                    <span\n                        className='material-icons'\n                        style={{ paddingRight: '2em' }}\n                    >\n                        monetization_on\n                    </span>{' '}\n                    Active crypto currencies:{' '}\n                    <span\n                        style={{\n                            color: '#9ec9c1',\n                            fontWeight: 'bold'\n                        }}\n                    >\n                        {globalDataLoad.globalDataLoad.active_cryptocurrencies}\n                    </span>\n                </StyledList>\n                <StyledList>\n                    <span\n                        className='material-icons'\n                        style={{ paddingRight: '2em' }}\n                    >\n                        storefront\n                    </span>{' '}\n                    Markets:{' '}\n                    <span\n                        style={{\n                            color: '#9ec9c1',\n                            fontWeight: 'bold'\n                        }}\n                    >\n                        {globalDataLoad.globalDataLoad.markets}\n                    </span>\n                </StyledList>\n                <StyledList>\n                    <span\n                        className='material-icons'\n                        style={{ paddingRight: '2em' }}\n                    >\n                        local_convenience_store\n                    </span>{' '}\n                    Market cap change USD 24h:{' '}\n                    <span\n                        style={{\n                            color: '#9ec9c1',\n                            fontWeight: 'bold'\n                        }}\n                    >\n                        {globalDataLoad.globalDataLoad.market_cap_change_percentage_24h_usd.toFixed(\n                            2\n                        )}\n                        %\n                    </span>\n                </StyledList>\n                <StyledList>\n                    <span\n                        className='material-icons'\n                        style={{ paddingRight: '2em' }}\n                    >\n                        call_missed_outgoing\n                    </span>{' '}\n                    Ongoing icos:{' '}\n                    <span\n                        style={{\n                            color: '#9ec9c1',\n                            fontWeight: 'bold'\n                        }}\n                    >\n                        {globalDataLoad.globalDataLoad.ongoing_icos}\n                    </span>\n                </StyledList>\n                <StyledList>\n                    <span\n                        className='material-icons'\n                        style={{ paddingRight: '2em' }}\n                    >\n                        cancel_presentation\n                    </span>{' '}\n                    Ended icos:{' '}\n                    <span\n                        style={{\n                            color: '#9ec9c1',\n                            fontWeight: 'bold'\n                        }}\n                    >\n                        {globalDataLoad.globalDataLoad.ended_icos}\n                    </span>\n                </StyledList>\n                <StyledList>\n                    <span\n                        className='material-icons'\n                        style={{ paddingRight: '2em' }}\n                    >\n                        upcoming\n                    </span>{' '}\n                    Upcoming icos:{' '}\n                    <span\n                        style={{\n                            color: '#9ec9c1',\n                            fontWeight: 'bold'\n                        }}\n                    >\n                        {globalDataLoad.globalDataLoad.upcoming_icos}\n                    </span>\n                </StyledList>\n            </StyledUl>\n        </>\n    );\n};\n\nexport default GlobalList;\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { rgba, modularScale } from 'polished';\nimport { getGlobalData } from '../actions/globalData';\nimport { Spinner } from './Spinner';\nimport PolarAreaChart from './PolarAreaChart';\nimport GlobalTable from './GlobalTable';\nimport GlobalList from './GlobalList';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    height: 90vh;\n    margin-left: 2em;\n    @media (max-width: 768px) {\n        display: flex;\n        flex-direction: column;\n    }\n`;\n\nconst RightFlex = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    padding-bottom: 2em;\n    @media (min-width: 2560px) {\n        /* justify-content: space-around; */\n        justify-content: flex-start;\n        margin-top: 2em;\n        margin-left: 1em;\n    }\n`;\n\nconst GlobalData = ({\n    getGlobalData,\n    globalData: { globalDataLoad, loading }\n}) => {\n    useEffect(() => {\n        getGlobalData();\n    }, [getGlobalData]);\n\n    let coins = [];\n    for (const property in globalDataLoad.total_volume) {\n        let coin = {};\n        coin.coin = property;\n        coin.volume = globalDataLoad.total_volume[property];\n        coin.marketCap = globalDataLoad.total_market_cap[property];\n        coins = [...coins, coin];\n    }\n\n    return (\n        <>\n            {loading ? (\n                <Spinner />\n            ) : (\n                <Wrapper>\n                    <GlobalTable coins={coins} />\n                    <RightFlex>\n                        <PolarAreaChart globalDataLoad={globalDataLoad} />\n                        <GlobalList globalDataLoad={globalDataLoad} />\n                    </RightFlex>\n                </Wrapper>\n            )}\n        </>\n    );\n};\n\nGlobalData.propTypes = {\n    getGlobalData: PropTypes.func.isRequired,\n    globalDataLoad: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    globalData: state.globalData\n});\nexport default connect(mapStateToProps, { getGlobalData })(\n    withRouter(GlobalData)\n);\n","import axios from 'axios';\nimport { GET_GLOBAL_DATA, GET_GLOBAL_DATA_ERROR } from './types';\n\nexport const getGlobalData = () => async dispatch => {\n    try {\n        const res = await axios.get(`https://api.coingecko.com/api/v3/global`);\n        dispatch({\n            type: GET_GLOBAL_DATA,\n            payload: res.data.data\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_GLOBAL_DATA_ERROR,\n            payload: {\n                msg: err,\n                status: err\n            }\n        });\n    }\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport TopChart from './TopChart';\nimport CoinList from './CoinList';\nimport Exchanges from './Exchanges';\nimport ExchangeVolume from './ExchangeVolume';\nimport GlobalData from './GlobalData';\n\nconst Container = styled.div`\n    background: #2d363d;\n    border-top-right-radius: 20px;\n    border-bottom-right-radius: 20px;\n    padding: 0 1em 0 0;\n    width: 100%;\n    @media (max-width: 768px) {\n        width: 100%;\n        border-radius: 0 0 0 0;\n    }\n`;\n\nconst Routes = () => {\n    return (\n        <Container>\n            <Route exact path='/coin_dash' component={TopChart} />\n            <Route exact path='/coinlist' component={CoinList} />\n            <Route exact path='/exchanges' component={Exchanges} />\n            <Route exact path='/volumes' component={ExchangeVolume} />\n            <Route exact path='/global-data' component={GlobalData} />\n            {/* <Route component={NotFound} /> */}\n        </Container>\n    );\n};\n\nexport default Routes;\n","import React, { Fragment, useState } from 'react';\nimport { Link as RouterDomLink, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { rgba, modularScale } from 'polished';\n\nconst Link = ({ isActive, children, ...props }) => {\n    return <RouterDomLink {...props}>{children}</RouterDomLink>;\n};\n\nconst StyledLink = styled(Link)`\n    padding: 4px 8px;\n    display: block;\n    text-align: center;\n    box-sizing: border-box;\n    margin: auto 0;\n    font-weight: ${p => (p.isActive ? 'bold' : 'normal')};\n    text-decoration: none;\n`;\n\nconst LogoLink = styled(Link)`\n    float: left;\n    color: white;\n    text-decoration: none;\n`;\n\nconst Menu = styled.nav`\n    display: ${p => (p.open ? 'block' : 'none')};\n    left: 0;\n    padding: 8px;\n    box-sizing: border-box;\n\n    @media (min-width: 768px) {\n        display: flex;\n        background: none;\n        left: initial;\n        top: initial;\n        margin: auto 0 auto auto;\n        border-bottom: none;\n        position: relative;\n    }\n`;\n\nconst MobileMenuIcon = styled.div`\n    margin: auto 2em auto auto;\n    width: 25px;\n    min-width: 25px;\n    padding: 5px;\n    color: white;\n    > div {\n        height: 3px;\n        margin: 5px 0;\n        width: 100%;\n        background: white;\n    }\n    @media (min-width: 768px) {\n        display: none;\n    }\n`;\nconst HeaderWrapper = styled.div`\n    height: 60px;\n    width: 100%;\n    max-width: 2000px;\n    box-sizing: border-box;\n    padding: 0 16px;\n    position: fixed;\n    top: 0;\n    background: #2d363d;\n    opacity: 0.95;\n    border-bottom: 1px solid #682e19;\n    border-width: thin;\n    z-index: 10;\n`;\n\nconst StyledUl = styled.ul`\n    list-style: none;\n    display: flex;\n    margin: auto 1em auto auto;\n    @media (max-width: 768px) {\n        padding: 1em 2em;\n        flex-direction: column;\n        background: gray;\n        width: 30%;\n        z-index: 500;\n        margin-left: auto;\n        margin-top: 0;\n        font-size: 20px;\n        border-radius: 20px;\n        box-shadow: 0 4px 15px ${rgba('black', 0.1)};\n        filter: drop-shadow(1px 4px 12px #101820);\n        border: 1px solid rgb(235, 233, 233);\n        background: linear-gradient(\n            111.29deg,\n            rgba(34, 41, 46, 0.53) -1.83%,\n            rgba(27, 32, 37, 0) 189.95%\n        );\n        box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n        backdrop-filter: blur(70px);\n    }\n`;\n\nconst StyledList = styled.li`\n    > a {\n        position: relative;\n        color: ${props => (props.isActive ? '#9C4526' : 'white')};\n        text-decoration: none;\n    }\n    > a:hover {\n        color: #8e8c89;\n    }\n    > a:before {\n        content: '';\n        position: absolute;\n        width: 100%;\n        height: 2px;\n        bottom: 0;\n        left: 0;\n        background-color: #ad4d2a;\n        visibility: hidden;\n        -webkit-transform: scaleX(0);\n        transform: scaleX(0);\n        -webkit-transition: all 0.3s ease-in-out 0s;\n        transition: all 0.3s ease-in-out 0s;\n    }\n    > a:hover:before {\n        visibility: visible;\n        -webkit-transform: scaleX(1);\n        transform: scaleX(1);\n    }\n`;\n\nconst StyledNav = styled.nav`\n    background: #2a2927;\n`;\n\nconst Navbar = props => {\n    const { pathname } = useLocation();\n    const [menuOpen, setMenuOpen] = useState(false);\n    const pathnameLocation = () => {\n        if (pathname.startsWith('/dashboard')) {\n            return true;\n        }\n    };\n    const authLinks = (\n        <HeaderWrapper>\n            <h1>\n                <LogoLink to='/' logo='true'>\n                    coin_<span style={{ color: '#F16350' }}>D</span>ash\n                </LogoLink>\n            </h1>\n            <MobileMenuIcon onClick={() => setMenuOpen(!menuOpen)}>\n                <div />\n                <div />\n                <div />\n            </MobileMenuIcon>\n            <Menu open={menuOpen}>\n                <StyledUl>\n                    <StyledList isActive={pathname === '/'}>\n                        <StyledLink\n                            onClick={() => setMenuOpen(!menuOpen)}\n                            isActive={pathname === '/'}\n                            to='/'\n                        >\n                            <span>dashboard</span>\n                        </StyledLink>\n                    </StyledList>\n                    <StyledList isActive={pathname === '/coinlist'}>\n                        <StyledLink\n                            onClick={() => setMenuOpen(!menuOpen)}\n                            isActive={pathname === '/coinlist'}\n                            to='/coinlist'\n                        >\n                            <span>coin list</span>\n                        </StyledLink>\n                    </StyledList>\n                </StyledUl>\n            </Menu>\n        </HeaderWrapper>\n    );\n\n    return <StyledNav>{<Fragment>{authLinks}</Fragment>}</StyledNav>;\n};\n\nexport default connect()(Navbar);\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './App.css';\n//redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n//components\nimport SideBar from './components/SideBar';\nimport Routes from './components/Routes';\nimport Navbar from './components/Navbar';\n\nconst Wrapper = styled.div`\n    display: flex;\n    position: relative;\n    /* padding-left: 3em; */\n    margin: 0 auto;\n    top: 4em;\n    border-radius: 20px;\n    height: 92vh;\n    width: 100%;\n    @media (max-width: 768px) {\n        padding-left: 0;\n    }\n`;\n\n// const Container = styled.div`\n//     /* height: 98vh; */\n//     display: flex;\n//     flex-direction: column;\n// `;\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <Router>\n                {/* <Container> */}\n                <Navbar />\n                <Wrapper>\n                    <SideBar />\n                    <Switch>\n                        <Route component={Routes} />\n                    </Switch>\n                </Wrapper>\n                {/* </Container> */}\n            </Router>\n        </Provider>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","function timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp);\n    var months = [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n    ];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var time = date + ' ' + month + ' ' + year;\n    return time;\n}\n\nmodule.exports = timeConverter;\n"],"sourceRoot":""}