[{"/Users/juleskulcsar/Desktop/coin_dash/src/components/Navbar.js":"1","/Users/juleskulcsar/Desktop/coin_dash/src/actions/historicalData.js":"2","/Users/juleskulcsar/Desktop/coin_dash/src/components/SideBar.js":"3","/Users/juleskulcsar/Desktop/coin_dash/src/components/ExchangeVolume.js":"4","/Users/juleskulcsar/Desktop/coin_dash/src/components/RightTable.js":"5","/Users/juleskulcsar/Desktop/coin_dash/src/components/ScoreCard.js":"6","/Users/juleskulcsar/Desktop/coin_dash/src/components/TopScoreCards.js":"7","/Users/juleskulcsar/Desktop/coin_dash/src/components/TopChart.js":"8","/Users/juleskulcsar/Desktop/coin_dash/src/components/RightCard.js":"9","/Users/juleskulcsar/Desktop/coin_dash/src/components/Routes.js":"10","/Users/juleskulcsar/Desktop/coin_dash/src/reducers/historicalData.js":"11","/Users/juleskulcsar/Desktop/coin_dash/src/store.js":"12","/Users/juleskulcsar/Desktop/coin_dash/src/components/ExchangeIdTable.js":"13","/Users/juleskulcsar/Desktop/coin_dash/src/components/Exchanges.js":"14","/Users/juleskulcsar/Desktop/coin_dash/src/components/Chart_Component2.js":"15","/Users/juleskulcsar/Desktop/coin_dash/src/components/ExchangeScoreCards.js":"16","/Users/juleskulcsar/Desktop/coin_dash/src/components/GlobalList.js":"17","/Users/juleskulcsar/Desktop/coin_dash/src/components/PolarAreaChart.js":"18","/Users/juleskulcsar/Desktop/coin_dash/src/components/GlobalData.js":"19","/Users/juleskulcsar/Desktop/coin_dash/src/components/TickerTable.js":"20","/Users/juleskulcsar/Desktop/coin_dash/src/App.js":"21","/Users/juleskulcsar/Desktop/coin_dash/src/components/Chart_Component3.js":"22","/Users/juleskulcsar/Desktop/coin_dash/src/components/RightPanel.js":"23","/Users/juleskulcsar/Desktop/coin_dash/src/actions/types.js":"24"},{"size":4972,"mtime":1613422931671,"results":"25","hashOfConfig":"26"},{"size":1194,"mtime":1613079338109,"results":"27","hashOfConfig":"26"},{"size":6442,"mtime":1613512132876,"results":"28","hashOfConfig":"26"},{"size":5377,"mtime":1613504285156,"results":"29","hashOfConfig":"26"},{"size":23414,"mtime":1613499500649,"results":"30","hashOfConfig":"26"},{"size":2616,"mtime":1613596066131,"results":"31","hashOfConfig":"26"},{"size":6528,"mtime":1613597355362,"results":"32","hashOfConfig":"26"},{"size":2854,"mtime":1613597404836,"results":"33","hashOfConfig":"26"},{"size":5407,"mtime":1613597176272,"results":"34","hashOfConfig":"26"},{"size":1080,"mtime":1613512089344,"results":"35","hashOfConfig":"26"},{"size":580,"mtime":1612652563351,"results":"36","hashOfConfig":"26"},{"size":389,"mtime":1607210190414,"results":"37","hashOfConfig":"26"},{"size":3462,"mtime":1613501917343,"results":"38","hashOfConfig":"26"},{"size":3709,"mtime":1613502302648,"results":"39","hashOfConfig":"26"},{"size":3506,"mtime":1613504194550,"results":"40","hashOfConfig":"26"},{"size":2288,"mtime":1613504330731,"results":"41","hashOfConfig":"26"},{"size":4489,"mtime":1613504402908,"results":"42","hashOfConfig":"26"},{"size":3140,"mtime":1613504566660,"results":"43","hashOfConfig":"26"},{"size":2228,"mtime":1613504525638,"results":"44","hashOfConfig":"26"},{"size":4521,"mtime":1613404845282,"results":"45","hashOfConfig":"26"},{"size":1192,"mtime":1613410128301,"results":"46","hashOfConfig":"26"},{"size":3680,"mtime":1613596690653,"results":"47","hashOfConfig":"26"},{"size":1403,"mtime":1613597374362,"results":"48","hashOfConfig":"26"},{"size":756,"mtime":1613059619776,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"1i1br4n",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/juleskulcsar/Desktop/coin_dash/src/components/Navbar.js",["106","107"],"import React, { Fragment, useState } from 'react';\nimport { Link as RouterDomLink, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { rgba, modularScale } from 'polished';\n\nconst Link = ({ isActive, children, ...props }) => {\n    return <RouterDomLink {...props}>{children}</RouterDomLink>;\n};\n\nconst StyledLink = styled(Link)`\n    padding: 4px 8px;\n    display: block;\n    text-align: center;\n    box-sizing: border-box;\n    margin: auto 0;\n    font-weight: ${p => (p.isActive ? 'bold' : 'normal')};\n    text-decoration: none;\n`;\n\nconst LogoLink = styled(Link)`\n    float: left;\n    color: white;\n    text-decoration: none;\n`;\n\nconst Menu = styled.nav`\n    display: ${p => (p.open ? 'block' : 'none')};\n    left: 0;\n    padding: 8px;\n    box-sizing: border-box;\n\n    @media (min-width: 768px) {\n        display: flex;\n        background: none;\n        left: initial;\n        top: initial;\n        margin: auto 0 auto auto;\n        border-bottom: none;\n        position: relative;\n    }\n`;\n\nconst MobileMenuIcon = styled.div`\n    margin: auto 2em auto auto;\n    width: 25px;\n    min-width: 25px;\n    padding: 5px;\n    color: white;\n    > div {\n        height: 3px;\n        margin: 5px 0;\n        width: 100%;\n        background: white;\n    }\n    @media (min-width: 768px) {\n        display: none;\n    }\n`;\nconst HeaderWrapper = styled.div`\n    height: 60px;\n    width: 100%;\n    max-width: 2000px;\n    box-sizing: border-box;\n    padding: 0 16px;\n    position: fixed;\n    top: 0;\n    background: #2d363d;\n    opacity: 0.95;\n    border-bottom: 1px solid #682e19;\n    border-width: thin;\n    z-index: 10;\n`;\n\nconst StyledUl = styled.ul`\n    list-style: none;\n    display: flex;\n    margin: auto 1em auto auto;\n    @media (max-width: 768px) {\n        padding: 1em 2em;\n        flex-direction: column;\n        background: gray;\n        width: 30%;\n        z-index: 500;\n        margin-left: auto;\n        margin-top: 0;\n        font-size: 20px;\n        border-radius: 20px;\n        box-shadow: 0 4px 15px ${rgba('black', 0.1)};\n        filter: drop-shadow(1px 4px 12px #101820);\n        border: 1px solid rgb(235, 233, 233);\n        background: linear-gradient(\n            111.29deg,\n            rgba(34, 41, 46, 0.53) -1.83%,\n            rgba(27, 32, 37, 0) 189.95%\n        );\n        box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n        backdrop-filter: blur(70px);\n    }\n`;\n\nconst StyledList = styled.li`\n    > a {\n        position: relative;\n        color: ${props => (props.isActive ? '#9C4526' : 'white')};\n        text-decoration: none;\n    }\n    > a:hover {\n        color: #8e8c89;\n    }\n    > a:before {\n        content: '';\n        position: absolute;\n        width: 100%;\n        height: 2px;\n        bottom: 0;\n        left: 0;\n        background-color: #ad4d2a;\n        visibility: hidden;\n        -webkit-transform: scaleX(0);\n        transform: scaleX(0);\n        -webkit-transition: all 0.3s ease-in-out 0s;\n        transition: all 0.3s ease-in-out 0s;\n    }\n    > a:hover:before {\n        visibility: visible;\n        -webkit-transform: scaleX(1);\n        transform: scaleX(1);\n    }\n`;\n\nconst StyledNav = styled.nav`\n    background: #2a2927;\n`;\n\nconst Navbar = props => {\n    const { pathname } = useLocation();\n    const [menuOpen, setMenuOpen] = useState(false);\n    const pathnameLocation = () => {\n        if (pathname.startsWith('/dashboard')) {\n            return true;\n        }\n    };\n    const authLinks = (\n        <HeaderWrapper>\n            <h1>\n                <LogoLink to='/' logo='true'>\n                    coin_<span style={{ color: '#F16350' }}>D</span>ash\n                </LogoLink>\n            </h1>\n            <MobileMenuIcon onClick={() => setMenuOpen(!menuOpen)}>\n                <div />\n                <div />\n                <div />\n            </MobileMenuIcon>\n            <Menu open={menuOpen}>\n                <StyledUl>\n                    <StyledList isActive={pathname === '/'}>\n                        <StyledLink\n                            onClick={() => setMenuOpen(!menuOpen)}\n                            isActive={pathname === '/'}\n                            to='/'\n                        >\n                            <span>dashboard</span>\n                        </StyledLink>\n                    </StyledList>\n                    <StyledList isActive={pathname === '/coinlist'}>\n                        <StyledLink\n                            onClick={() => setMenuOpen(!menuOpen)}\n                            isActive={pathname === '/coinlist'}\n                            to='/coinlist'\n                        >\n                            <span>coin list</span>\n                        </StyledLink>\n                    </StyledList>\n                </StyledUl>\n            </Menu>\n        </HeaderWrapper>\n    );\n\n    return <StyledNav>{<Fragment>{authLinks}</Fragment>}</StyledNav>;\n};\n\nexport default connect()(Navbar);\n",["108","109"],"/Users/juleskulcsar/Desktop/coin_dash/src/actions/historicalData.js",[],"/Users/juleskulcsar/Desktop/coin_dash/src/components/SideBar.js",["110"],"import React, { useState } from 'react';\nimport { Link as RouterDomLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../images/logo.png';\nimport CoinGecko from '../images/CoinGecko.png';\n\nconst Link = ({ isActive, children, ...props }) => {\n    return <RouterDomLink {...props}>{children}</RouterDomLink>;\n};\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n    line-height: 1.6;\n    font-weight: ${props => (props.isActive ? 'bold' : 'normal')};\n`;\n\nconst StyledDiv = styled.div`\n    border-left: 1px solid #682e19;\n    padding-left: 1em;\n    padding-top: 1.5em;\n    width: 14vw;\n    min-width: 14vw;\n    background: gray;\n    border-top-left-radius: 20px;\n    border-bottom-left-radius: 20px;\n    filter: drop-shadow(1px 4px 12px #101820);\n    background: linear-gradient(\n        111.29deg,\n        rgba(140, 154, 163, 0.53) -1.83%,\n        rgba(68, 83, 93, 0) 189.95%\n    );\n    box-shadow: 50px, 60px, 189px rgba(0, 0, 0, 0.95);\n    backdrop-filter: blur(70px);\n    @media (max-width: 768px) {\n        display: none;\n    }\n    @media (min-width: 3840px) {\n        width: 10vw;\n    }\n`;\n\nconst StyledUl = styled.ul`\n    list-style: none;\n    padding: 0;\n`;\n\nconst StyledList = styled.li`\n    text-align: left;\n    font-size: 16px;\n    line-height: 1.6;\n    padding: 2px;\n    > a {\n        position: relative;\n        color: white;\n        text-decoration: none;\n    }\n    > a:hover {\n        color: #e47656;\n    }\n    > a:before {\n        content: '';\n        position: absolute;\n        width: 100%;\n        height: 2px;\n        bottom: 0;\n        left: 0;\n        background-color: #8e8c89;\n        visibility: hidden;\n        -webkit-transform: scaleX(0);\n        transform: scaleX(0);\n        -webkit-transition: all 0.3s ease-in-out 0s;\n        transition: all 0.3s ease-in-out 0s;\n    }\n    > a:hover:before {\n        visibility: visible;\n        -webkit-transform: scaleX(1);\n        transform: scaleX(1);\n    }\n    @media (min-width: 2560px) {\n        font-size: 30px;\n    }\n`;\n\nconst Logo = styled.img`\n    height: 4em;\n    width: 4em;\n    margin-left: 3em;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-radius: ${props => (props.square ? null : '50%')};\n    padding: 0.5em;\n    background: #44535d;\n`;\n\nconst CoinGeckoLogo = styled.img`\n    height: 1.5em;\n    width: 1.5em;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-radius: 50%;\n    vertical-align: middle;\n`;\n\nconst Paragraph = styled.p`\n    color: white;\n    line-height: 1.6;\n    font-size: 15px;\n    position: absolute;\n    bottom: 0;\n    @media (min-width: 2560px) {\n        font-size: 20px;\n    }\n`;\nconst ExternalLink = styled.a`\n    text-decoration: none;\n    line-height: 1.6;\n    color: white;\n`;\nconst CoinGeckoWrapper = styled.div`\n    text-align: center;\n`;\n\nconst SideBar = () => {\n    return (\n        <>\n            <StyledDiv>\n                <Logo src={logo} />\n                <StyledUl>\n                    <StyledList>\n                        <StyledLink to={`/coin_dash`}>\n                            <span\n                                style={{\n                                    paddingRight: '1em',\n                                    marginTop: '1em'\n                                }}\n                                className='material-icons'\n                            >\n                                dashboard\n                            </span>\n                            Dashboard\n                        </StyledLink>\n                    </StyledList>\n                    <StyledList>\n                        <StyledLink to={`/coinlist`}>\n                            <span\n                                style={{\n                                    paddingRight: '1em',\n                                    marginTop: '1em'\n                                }}\n                                className='material-icons'\n                            >\n                                view_list\n                            </span>\n                            Crypto Coins\n                        </StyledLink>\n                    </StyledList>\n                    <StyledList>\n                        <StyledLink to={`/exchanges`}>\n                            <span\n                                style={{\n                                    paddingRight: '1em',\n                                    marginTop: '1em'\n                                }}\n                                className='material-icons'\n                            >\n                                inventory_2\n                            </span>\n                            Exchanges\n                        </StyledLink>\n                    </StyledList>\n                    <StyledList>\n                        <StyledLink to={`/volumes`}>\n                            <span\n                                style={{\n                                    paddingRight: '1em',\n                                    marginTop: '1em'\n                                }}\n                                className='material-icons'\n                            >\n                                equalizer\n                            </span>\n                            Volumes\n                        </StyledLink>\n                    </StyledList>\n                    <StyledList>\n                        <StyledLink to={`/global-data`}>\n                            <span\n                                style={{\n                                    paddingRight: '1em',\n                                    marginTop: '1em'\n                                }}\n                                className='material-icons'\n                            >\n                                public\n                            </span>\n                            Global Data\n                        </StyledLink>\n                    </StyledList>\n                </StyledUl>\n                <CoinGeckoWrapper>\n                    <ExternalLink\n                        href='https://www.coingecko.com/'\n                        target='_blank'\n                    >\n                        <Paragraph>\n                            Data from CoinGecko{' '}\n                            <CoinGeckoLogo src={CoinGecko} square={true} />\n                        </Paragraph>\n                    </ExternalLink>\n                </CoinGeckoWrapper>\n            </StyledDiv>\n        </>\n    );\n};\n\nexport default SideBar;\n","/Users/juleskulcsar/Desktop/coin_dash/src/components/ExchangeVolume.js",["111","112","113"],"import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { rgba } from 'polished';\nimport { getExchangeVolume } from '../actions/exchangeVolume';\nimport { getExchanges } from '../actions/exchanges';\nimport { getExchangeById } from '../actions/exchangesById';\nimport Chart_Component2 from './Chart_Component2';\nimport TickerTable from './TickerTable';\nimport { Spinner } from './Spinner';\nimport ExchangeScoreCards from './ExchangeScoreCards';\nimport ExchangeIdTable from './ExchangeIdTable';\n\nconst transition = css`\n    transition: transform 0.45s;\n`;\n\nconst Card = styled.div`\n    overflow: hidden;\n    position: relative;\n    width: 780px;\n    max-width: 900px;\n    /* margin: 0 auto; */\n`;\nconst Row = styled.div`\n    position: relative;\n`;\nconst Underline = styled.div`\n    position: relative;\n    left: 0;\n    bottom: 0;\n    top: 3em;\n    width: 390px;\n    height: 8px;\n    background: #e47656;\n    transform: translateX(${p => (p.active === 0 ? 0 : p.active * 100)}%);\n    ${transition};\n`;\n\nconst Button = styled.button`\n    position: relative;\n    right: 0;\n    bottom: 0;\n    border: 1px solid transparent;\n    border-bottom: 1px solid ${rgba('white', 0.25)};\n    ${props =>\n        props.borderTop\n            ? css`\n                  border-top-left-radius: 10px;\n              `\n            : css`\n                  border-top-right-radius: 10px;\n              `}\n    color: ${p => rgba('white', p.active ? 1 : 0.25)};\n    font-size: 20px;\n    background: #5b6f7c;\n    height: 2em;\n    width: 100%;\n    opacity: 0.8;\n    backdrop-filter: blur(20px);\n    @media (max-width: 768px) {\n        display: ${props => (props.hide ? 'none' : null)};\n    }\n`;\n\nconst Content = styled.div`\n    height: 90%;\n    display: flex;\n    justify-content: space-between;\n    transform: translate(${p => (p.active === 0 ? 0 : `-${p.active * 820}px`)});\n    ${transition};\n`;\n\nconst Tab = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    width: 780px;\n    margin: 2em 2em 0 2em;\n    @media (max-width: 768px) {\n        display: ${props => (props.hide ? 'none' : null)};\n    }\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    position: relative;\n    border-radius: 20px;\n    height: 90vh;\n    margin: 0 auto;\n`;\n\nconst tabs = ['volumes', 'tickers'];\n\nconst ExchangeVolume = ({\n    getExchangeVolume,\n    getExchangeById,\n    exchangeVolumes: { exchangeVolumeLoad, params },\n    exchanges: { exchanges }\n}) => {\n    const [param, setParam] = useState('binance');\n\n    useEffect(() => {\n        let mounted = true;\n        if (mounted) {\n            getExchangeVolume(param);\n            getExchanges();\n            getExchangeById(param);\n        }\n        return function cleanup() {\n            mounted = false;\n        };\n    }, [param]);\n\n    const idList = [];\n    for (let i = 0; i < exchanges.length; i++) {\n        idList.push(exchanges[i].id);\n    }\n    let idIndex = idList.indexOf('aax');\n\n    const [active, setActive] = useState(0);\n\n    const Tabs = ({ active, setActive }) => (\n        <Row>\n            <Underline active={active} />\n            <div style={{ display: 'flex' }}>\n                <Button\n                    active={active === 0}\n                    onClick={() => setActive(0)}\n                    hide={true}\n                    borderTop={true}\n                >\n                    {tabs[0]}\n                </Button>\n                <Button\n                    active={active === 1}\n                    onClick={() => setActive(1)}\n                    hide={true}\n                >\n                    {tabs[1]}\n                </Button>\n            </div>\n        </Row>\n    );\n\n    const handleClick = id => {\n        setParam(id);\n    };\n\n    return (\n        <>\n            {exchangeVolumeLoad.length < 1 ? (\n                <Spinner />\n            ) : (\n                <Wrapper>\n                    <ExchangeIdTable\n                        handleClick={handleClick}\n                        exchanges={exchanges}\n                        params={params}\n                    />\n                    <Card>\n                        <Tabs active={active} setActive={setActive} />\n                        <Content active={active}>\n                            <Tab>\n                                <ExchangeScoreCards param={param} />\n                                <Chart_Component2 param={param} />\n                            </Tab>\n                            <Tab hide={true}>\n                                <TickerTable param={param} />\n                            </Tab>\n                        </Content>\n                    </Card>\n                </Wrapper>\n            )}\n        </>\n    );\n};\n\nExchangeVolume.propTypes = {\n    getExchangeVolume: PropTypes.func.isRequired,\n    getExchangeById: PropTypes.func.isRequired,\n    exchangeVolumeLoad: PropTypes.object.isRequired,\n    params: PropTypes.object.isRequired,\n    getExchanges: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    exchangeVolumes: state.exchangeVolumes,\n    exchanges: state.exchanges\n});\nexport default connect(mapStateToProps, {\n    getExchanges,\n    getExchangeVolume,\n    getExchangeById\n})(withRouter(ExchangeVolume));\n","/Users/juleskulcsar/Desktop/coin_dash/src/components/RightTable.js",["114","115","116","117"],"/Users/juleskulcsar/Desktop/coin_dash/src/components/ScoreCard.js",["118","119"],"/Users/juleskulcsar/Desktop/coin_dash/src/components/TopScoreCards.js",["120"],"/Users/juleskulcsar/Desktop/coin_dash/src/components/TopChart.js",[],"/Users/juleskulcsar/Desktop/coin_dash/src/components/RightCard.js",["121","122","123"],"/Users/juleskulcsar/Desktop/coin_dash/src/components/Routes.js",["124"],"import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport TopChart from './TopChart';\nimport CoinList from './CoinList';\nimport Exchanges from './Exchanges';\nimport ExchangeVolume from './ExchangeVolume';\nimport GlobalData from './GlobalData';\n\nconst Container = styled.div`\n    background: #2d363d;\n    border-top-right-radius: 20px;\n    border-bottom-right-radius: 20px;\n    padding: 0 1em 0 0;\n    width: 100%;\n    @media (max-width: 768px) {\n        width: 100%;\n        border-radius: 0 0 0 0;\n    }\n`;\n\nconst Routes = () => {\n    return (\n        <Container>\n            <Route exact path='/coin_dash' component={TopChart} />\n            <Route exact path='/coinlist' component={CoinList} />\n            <Route exact path='/exchanges' component={Exchanges} />\n            <Route exact path='/volumes' component={ExchangeVolume} />\n            <Route exact path='/global-data' component={GlobalData} />\n            {/* <Route component={NotFound} /> */}\n        </Container>\n    );\n};\n\nexport default Routes;\n",["125","126"],"/Users/juleskulcsar/Desktop/coin_dash/src/reducers/historicalData.js",[],"/Users/juleskulcsar/Desktop/coin_dash/src/store.js",[],"/Users/juleskulcsar/Desktop/coin_dash/src/components/ExchangeIdTable.js",["127","128","129"],"/Users/juleskulcsar/Desktop/coin_dash/src/components/Exchanges.js",["130","131","132"],"/Users/juleskulcsar/Desktop/coin_dash/src/components/Chart_Component2.js",["133"],"/Users/juleskulcsar/Desktop/coin_dash/src/components/ExchangeScoreCards.js",["134"],"/Users/juleskulcsar/Desktop/coin_dash/src/components/GlobalList.js",[],"/Users/juleskulcsar/Desktop/coin_dash/src/components/PolarAreaChart.js",["135"],"/Users/juleskulcsar/Desktop/coin_dash/src/components/GlobalData.js",["136","137"],"import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { rgba, modularScale } from 'polished';\nimport { getGlobalData } from '../actions/globalData';\nimport { Spinner } from './Spinner';\nimport PolarAreaChart from './PolarAreaChart';\nimport GlobalTable from './GlobalTable';\nimport GlobalList from './GlobalList';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    height: 90vh;\n    margin-left: 2em;\n    @media (max-width: 768px) {\n        display: flex;\n        flex-direction: column;\n    }\n`;\n\nconst RightFlex = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    padding-bottom: 2em;\n    @media (min-width: 2560px) {\n        /* justify-content: space-around; */\n        justify-content: flex-start;\n        margin-top: 2em;\n        margin-left: 1em;\n    }\n`;\n\nconst GlobalData = ({\n    getGlobalData,\n    globalData: { globalDataLoad, loading }\n}) => {\n    useEffect(() => {\n        getGlobalData();\n    }, [getGlobalData]);\n\n    let coins = [];\n    for (const property in globalDataLoad.total_volume) {\n        let coin = {};\n        coin.coin = property;\n        coin.volume = globalDataLoad.total_volume[property];\n        coin.marketCap = globalDataLoad.total_market_cap[property];\n        coins = [...coins, coin];\n    }\n\n    return (\n        <>\n            {loading ? (\n                <Spinner />\n            ) : (\n                <Wrapper>\n                    <GlobalTable coins={coins} />\n                    <RightFlex>\n                        <PolarAreaChart globalDataLoad={globalDataLoad} />\n                        <GlobalList globalDataLoad={globalDataLoad} />\n                    </RightFlex>\n                </Wrapper>\n            )}\n        </>\n    );\n};\n\nGlobalData.propTypes = {\n    getGlobalData: PropTypes.func.isRequired,\n    globalDataLoad: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    globalData: state.globalData\n});\nexport default connect(mapStateToProps, { getGlobalData })(\n    withRouter(GlobalData)\n);\n",["138","139"],"/Users/juleskulcsar/Desktop/coin_dash/src/components/TickerTable.js",["140","141"],"/Users/juleskulcsar/Desktop/coin_dash/src/App.js",[],"/Users/juleskulcsar/Desktop/coin_dash/src/components/Chart_Component3.js",["142","143"],"/Users/juleskulcsar/Desktop/coin_dash/src/components/RightPanel.js",["144","145"],"/Users/juleskulcsar/Desktop/coin_dash/src/actions/types.js",[],{"ruleId":"146","severity":1,"message":"147","line":5,"column":16,"nodeType":"148","messageId":"149","endLine":5,"endColumn":28},{"ruleId":"146","severity":1,"message":"150","line":139,"column":11,"nodeType":"148","messageId":"149","endLine":139,"endColumn":27},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"146","severity":1,"message":"155","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"157","line":115,"column":8,"nodeType":"158","endLine":115,"endColumn":15,"suggestions":"159"},{"ruleId":"146","severity":1,"message":"160","line":121,"column":9,"nodeType":"148","messageId":"149","endLine":121,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":168,"column":33,"nodeType":"163","endLine":168,"endColumn":67},{"ruleId":"146","severity":1,"message":"164","line":3,"column":18,"nodeType":"148","messageId":"149","endLine":3,"endColumn":21},{"ruleId":"146","severity":1,"message":"165","line":3,"column":23,"nodeType":"148","messageId":"149","endLine":3,"endColumn":32},{"ruleId":"146","severity":1,"message":"147","line":4,"column":16,"nodeType":"148","messageId":"149","endLine":4,"endColumn":28},{"ruleId":"146","severity":1,"message":"166","line":37,"column":7,"nodeType":"148","messageId":"149","endLine":37,"endColumn":9},{"ruleId":"146","severity":1,"message":"165","line":3,"column":23,"nodeType":"148","messageId":"149","endLine":3,"endColumn":32},{"ruleId":"146","severity":1,"message":"147","line":4,"column":16,"nodeType":"148","messageId":"149","endLine":4,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":61,"column":47,"nodeType":"169","messageId":"170","endLine":61,"endColumn":49},{"ruleId":"146","severity":1,"message":"164","line":3,"column":18,"nodeType":"148","messageId":"149","endLine":3,"endColumn":21},{"ruleId":"146","severity":1,"message":"165","line":3,"column":23,"nodeType":"148","messageId":"149","endLine":3,"endColumn":32},{"ruleId":"146","severity":1,"message":"147","line":4,"column":16,"nodeType":"148","messageId":"149","endLine":4,"endColumn":28},{"ruleId":"146","severity":1,"message":"171","line":2,"column":17,"nodeType":"148","messageId":"149","endLine":2,"endColumn":23},{"ruleId":"151","replacedBy":"172"},{"ruleId":"153","replacedBy":"173"},{"ruleId":"146","severity":1,"message":"174","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"155","line":1,"column":28,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"146","severity":1,"message":"147","line":4,"column":16,"nodeType":"148","messageId":"149","endLine":4,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":6,"column":16,"nodeType":"148","messageId":"149","endLine":6,"endColumn":28},{"ruleId":"156","severity":1,"message":"175","line":85,"column":8,"nodeType":"158","endLine":85,"endColumn":10,"suggestions":"176"},{"ruleId":"167","severity":1,"message":"168","line":108,"column":31,"nodeType":"169","messageId":"170","endLine":108,"endColumn":33},{"ruleId":"156","severity":1,"message":"177","line":108,"column":8,"nodeType":"158","endLine":108,"endColumn":37,"suggestions":"178"},{"ruleId":"156","severity":1,"message":"175","line":36,"column":8,"nodeType":"158","endLine":36,"endColumn":10,"suggestions":"179"},{"ruleId":"146","severity":1,"message":"180","line":34,"column":9,"nodeType":"148","messageId":"149","endLine":34,"endColumn":10},{"ruleId":"146","severity":1,"message":"181","line":6,"column":10,"nodeType":"148","messageId":"149","endLine":6,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":6,"column":16,"nodeType":"148","messageId":"149","endLine":6,"endColumn":28},{"ruleId":"151","replacedBy":"182"},{"ruleId":"153","replacedBy":"183"},{"ruleId":"146","severity":1,"message":"147","line":5,"column":16,"nodeType":"148","messageId":"149","endLine":5,"endColumn":28},{"ruleId":"156","severity":1,"message":"184","line":88,"column":8,"nodeType":"158","endLine":88,"endColumn":32,"suggestions":"185"},{"ruleId":"146","severity":1,"message":"186","line":7,"column":10,"nodeType":"148","messageId":"149","endLine":7,"endColumn":17},{"ruleId":"156","severity":1,"message":"177","line":116,"column":8,"nodeType":"158","endLine":116,"endColumn":37,"suggestions":"187"},{"ruleId":"156","severity":1,"message":"188","line":27,"column":8,"nodeType":"158","endLine":27,"endColumn":21,"suggestions":"189"},{"ruleId":"167","severity":1,"message":"168","line":31,"column":47,"nodeType":"169","messageId":"170","endLine":31,"endColumn":49},"no-unused-vars","'modularScale' is defined but never used.","Identifier","unusedVar","'pathnameLocation' is assigned a value but never used.","no-native-reassign",["190"],"no-negated-in-lhs",["191"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getExchangeById' and 'getExchangeVolume'. Either include them or remove the dependency array. If 'getExchangeVolume' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["192"],"'idIndex' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Chart_Component2 must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'css' is defined but never used.","'keyframes' is defined but never used.","'TH' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Switch' is defined but never used.",["190"],["191"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'getExchanges'. Either include it or remove the dependency array. If 'getExchanges' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["193"],"React Hook useEffect has a missing dependency: 'param'. Either include it or remove the dependency array. Outer scope values like 'myChart' aren't valid dependencies because mutating them doesn't re-render the component.",["194"],["195"],"'c' is assigned a value but never used.","'rgba' is defined but never used.",["190"],["191"],"React Hook useEffect has an unnecessary dependency: 'getExchangeById'. Either exclude it or remove the dependency array. Outer scope values like 'getExchangeById' aren't valid dependencies because mutating them doesn't re-render the component.",["196"],"'Spinner' is defined but never used.",["197"],"React Hook useEffect has a missing dependency: 'coin'. Either include it or remove the dependency array.",["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"201","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [getExchangeById, getExchangeVolume, param]",{"range":"212","text":"213"},"Update the dependencies array to be: [getExchanges]",{"range":"214","text":"215"},"Update the dependencies array to be: [exchangeVolumeLoad, param]",{"range":"216","text":"217"},{"range":"218","text":"215"},"Update the dependencies array to be: [param]",{"range":"219","text":"220"},"Update the dependencies array to be: [historicalDataLoad, param]",{"range":"221","text":"222"},"Update the dependencies array to be: [coin, getCoinData]",{"range":"223","text":"224"},[2949,2956],"[getExchangeById, getExchangeVolume, param]",[1903,1905],"[getExchanges]",[2984,3013],"[exchangeVolumeLoad, param]",[912,914],[2082,2106],"[param]",[3230,3259],"[historicalDataLoad, param]",[750,763],"[coin, getCoinData]"]